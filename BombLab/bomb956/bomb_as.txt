
bomb：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000400b70 <_init>:
  400b70:	48 83 ec 08          	sub    $0x8,%rsp
  400b74:	48 8b 05 7d 34 20 00 	mov    0x20347d(%rip),%rax        # 603ff8 <__gmon_start__>
  400b7b:	48 85 c0             	test   %rax,%rax
  400b7e:	74 05                	je     400b85 <_init+0x15>
  400b80:	e8 eb 01 00 00       	callq  400d70 <__gmon_start__@plt>
  400b85:	48 83 c4 08          	add    $0x8,%rsp
  400b89:	c3                   	retq   

Disassembly of section .plt:

0000000000400b90 <.plt>:
  400b90:	ff 35 72 34 20 00    	pushq  0x203472(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b96:	ff 25 74 34 20 00    	jmpq   *0x203474(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400ba0 <getenv@plt>:
  400ba0:	ff 25 72 34 20 00    	jmpq   *0x203472(%rip)        # 604018 <getenv@GLIBC_2.2.5>
  400ba6:	68 00 00 00 00       	pushq  $0x0
  400bab:	e9 e0 ff ff ff       	jmpq   400b90 <.plt>

0000000000400bb0 <strcasecmp@plt>:
  400bb0:	ff 25 6a 34 20 00    	jmpq   *0x20346a(%rip)        # 604020 <strcasecmp@GLIBC_2.2.5>
  400bb6:	68 01 00 00 00       	pushq  $0x1
  400bbb:	e9 d0 ff ff ff       	jmpq   400b90 <.plt>

0000000000400bc0 <__errno_location@plt>:
  400bc0:	ff 25 62 34 20 00    	jmpq   *0x203462(%rip)        # 604028 <__errno_location@GLIBC_2.2.5>
  400bc6:	68 02 00 00 00       	pushq  $0x2
  400bcb:	e9 c0 ff ff ff       	jmpq   400b90 <.plt>

0000000000400bd0 <strcpy@plt>:
  400bd0:	ff 25 5a 34 20 00    	jmpq   *0x20345a(%rip)        # 604030 <strcpy@GLIBC_2.2.5>
  400bd6:	68 03 00 00 00       	pushq  $0x3
  400bdb:	e9 b0 ff ff ff       	jmpq   400b90 <.plt>

0000000000400be0 <puts@plt>:
  400be0:	ff 25 52 34 20 00    	jmpq   *0x203452(%rip)        # 604038 <puts@GLIBC_2.2.5>
  400be6:	68 04 00 00 00       	pushq  $0x4
  400beb:	e9 a0 ff ff ff       	jmpq   400b90 <.plt>

0000000000400bf0 <write@plt>:
  400bf0:	ff 25 4a 34 20 00    	jmpq   *0x20344a(%rip)        # 604040 <write@GLIBC_2.2.5>
  400bf6:	68 05 00 00 00       	pushq  $0x5
  400bfb:	e9 90 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c00 <__stack_chk_fail@plt>:
  400c00:	ff 25 42 34 20 00    	jmpq   *0x203442(%rip)        # 604048 <__stack_chk_fail@GLIBC_2.4>
  400c06:	68 06 00 00 00       	pushq  $0x6
  400c0b:	e9 80 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c10 <alarm@plt>:
  400c10:	ff 25 3a 34 20 00    	jmpq   *0x20343a(%rip)        # 604050 <alarm@GLIBC_2.2.5>
  400c16:	68 07 00 00 00       	pushq  $0x7
  400c1b:	e9 70 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c20 <close@plt>:
  400c20:	ff 25 32 34 20 00    	jmpq   *0x203432(%rip)        # 604058 <close@GLIBC_2.2.5>
  400c26:	68 08 00 00 00       	pushq  $0x8
  400c2b:	e9 60 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c30 <read@plt>:
  400c30:	ff 25 2a 34 20 00    	jmpq   *0x20342a(%rip)        # 604060 <read@GLIBC_2.2.5>
  400c36:	68 09 00 00 00       	pushq  $0x9
  400c3b:	e9 50 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c40 <__libc_start_main@plt>:
  400c40:	ff 25 22 34 20 00    	jmpq   *0x203422(%rip)        # 604068 <__libc_start_main@GLIBC_2.2.5>
  400c46:	68 0a 00 00 00       	pushq  $0xa
  400c4b:	e9 40 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c50 <fgets@plt>:
  400c50:	ff 25 1a 34 20 00    	jmpq   *0x20341a(%rip)        # 604070 <fgets@GLIBC_2.2.5>
  400c56:	68 0b 00 00 00       	pushq  $0xb
  400c5b:	e9 30 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c60 <signal@plt>:
  400c60:	ff 25 12 34 20 00    	jmpq   *0x203412(%rip)        # 604078 <signal@GLIBC_2.2.5>
  400c66:	68 0c 00 00 00       	pushq  $0xc
  400c6b:	e9 20 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c70 <gethostbyname@plt>:
  400c70:	ff 25 0a 34 20 00    	jmpq   *0x20340a(%rip)        # 604080 <gethostbyname@GLIBC_2.2.5>
  400c76:	68 0d 00 00 00       	pushq  $0xd
  400c7b:	e9 10 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c80 <__memmove_chk@plt>:
  400c80:	ff 25 02 34 20 00    	jmpq   *0x203402(%rip)        # 604088 <__memmove_chk@GLIBC_2.3.4>
  400c86:	68 0e 00 00 00       	pushq  $0xe
  400c8b:	e9 00 ff ff ff       	jmpq   400b90 <.plt>

0000000000400c90 <strtol@plt>:
  400c90:	ff 25 fa 33 20 00    	jmpq   *0x2033fa(%rip)        # 604090 <strtol@GLIBC_2.2.5>
  400c96:	68 0f 00 00 00       	pushq  $0xf
  400c9b:	e9 f0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400ca0 <memcpy@plt>:
  400ca0:	ff 25 f2 33 20 00    	jmpq   *0x2033f2(%rip)        # 604098 <memcpy@GLIBC_2.14>
  400ca6:	68 10 00 00 00       	pushq  $0x10
  400cab:	e9 e0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400cb0 <fflush@plt>:
  400cb0:	ff 25 ea 33 20 00    	jmpq   *0x2033ea(%rip)        # 6040a0 <fflush@GLIBC_2.2.5>
  400cb6:	68 11 00 00 00       	pushq  $0x11
  400cbb:	e9 d0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400cc0 <__isoc99_sscanf@plt>:
  400cc0:	ff 25 e2 33 20 00    	jmpq   *0x2033e2(%rip)        # 6040a8 <__isoc99_sscanf@GLIBC_2.7>
  400cc6:	68 12 00 00 00       	pushq  $0x12
  400ccb:	e9 c0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400cd0 <__printf_chk@plt>:
  400cd0:	ff 25 da 33 20 00    	jmpq   *0x2033da(%rip)        # 6040b0 <__printf_chk@GLIBC_2.3.4>
  400cd6:	68 13 00 00 00       	pushq  $0x13
  400cdb:	e9 b0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400ce0 <fopen@plt>:
  400ce0:	ff 25 d2 33 20 00    	jmpq   *0x2033d2(%rip)        # 6040b8 <fopen@GLIBC_2.2.5>
  400ce6:	68 14 00 00 00       	pushq  $0x14
  400ceb:	e9 a0 fe ff ff       	jmpq   400b90 <.plt>

0000000000400cf0 <gethostname@plt>:
  400cf0:	ff 25 ca 33 20 00    	jmpq   *0x2033ca(%rip)        # 6040c0 <gethostname@GLIBC_2.2.5>
  400cf6:	68 15 00 00 00       	pushq  $0x15
  400cfb:	e9 90 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d00 <exit@plt>:
  400d00:	ff 25 c2 33 20 00    	jmpq   *0x2033c2(%rip)        # 6040c8 <exit@GLIBC_2.2.5>
  400d06:	68 16 00 00 00       	pushq  $0x16
  400d0b:	e9 80 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d10 <connect@plt>:
  400d10:	ff 25 ba 33 20 00    	jmpq   *0x2033ba(%rip)        # 6040d0 <connect@GLIBC_2.2.5>
  400d16:	68 17 00 00 00       	pushq  $0x17
  400d1b:	e9 70 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d20 <__fprintf_chk@plt>:
  400d20:	ff 25 b2 33 20 00    	jmpq   *0x2033b2(%rip)        # 6040d8 <__fprintf_chk@GLIBC_2.3.4>
  400d26:	68 18 00 00 00       	pushq  $0x18
  400d2b:	e9 60 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d30 <sleep@plt>:
  400d30:	ff 25 aa 33 20 00    	jmpq   *0x2033aa(%rip)        # 6040e0 <sleep@GLIBC_2.2.5>
  400d36:	68 19 00 00 00       	pushq  $0x19
  400d3b:	e9 50 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d40 <__ctype_b_loc@plt>:
  400d40:	ff 25 a2 33 20 00    	jmpq   *0x2033a2(%rip)        # 6040e8 <__ctype_b_loc@GLIBC_2.3>
  400d46:	68 1a 00 00 00       	pushq  $0x1a
  400d4b:	e9 40 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d50 <__sprintf_chk@plt>:
  400d50:	ff 25 9a 33 20 00    	jmpq   *0x20339a(%rip)        # 6040f0 <__sprintf_chk@GLIBC_2.3.4>
  400d56:	68 1b 00 00 00       	pushq  $0x1b
  400d5b:	e9 30 fe ff ff       	jmpq   400b90 <.plt>

0000000000400d60 <socket@plt>:
  400d60:	ff 25 92 33 20 00    	jmpq   *0x203392(%rip)        # 6040f8 <socket@GLIBC_2.2.5>
  400d66:	68 1c 00 00 00       	pushq  $0x1c
  400d6b:	e9 20 fe ff ff       	jmpq   400b90 <.plt>

Disassembly of section .plt.got:

0000000000400d70 <__gmon_start__@plt>:
  400d70:	ff 25 82 32 20 00    	jmpq   *0x203282(%rip)        # 603ff8 <__gmon_start__>
  400d76:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400d80 <_start>:
  400d80:	31 ed                	xor    %ebp,%ebp
  400d82:	49 89 d1             	mov    %rdx,%r9
  400d85:	5e                   	pop    %rsi
  400d86:	48 89 e2             	mov    %rsp,%rdx
  400d89:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400d8d:	50                   	push   %rax
  400d8e:	54                   	push   %rsp
  400d8f:	49 c7 c0 a0 27 40 00 	mov    $0x4027a0,%r8
  400d96:	48 c7 c1 30 27 40 00 	mov    $0x402730,%rcx
  400d9d:	48 c7 c7 76 0e 40 00 	mov    $0x400e76,%rdi
  400da4:	e8 97 fe ff ff       	callq  400c40 <__libc_start_main@plt>
  400da9:	f4                   	hlt    
  400daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400db0 <deregister_tm_clones>:
  400db0:	b8 07 56 60 00       	mov    $0x605607,%eax
  400db5:	55                   	push   %rbp
  400db6:	48 2d 00 56 60 00    	sub    $0x605600,%rax
  400dbc:	48 83 f8 0e          	cmp    $0xe,%rax
  400dc0:	48 89 e5             	mov    %rsp,%rbp
  400dc3:	76 1b                	jbe    400de0 <deregister_tm_clones+0x30>

  400dc5:	b8 00 00 00 00       	mov    $0x0,%eax
  400dca:	48 85 c0             	test   %rax,%rax
  400dcd:	74 11                	je     400de0 <deregister_tm_clones+0x30>

  400dcf:	5d                   	pop    %rbp
  400dd0:	bf 00 56 60 00       	mov    $0x605600,%edi
  400dd5:	ff e0                	jmpq   *%rax

  400dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400dde:	00 00 
  400de0:	5d                   	pop    %rbp
  400de1:	c3                   	retq   
  400de2:	0f 1f 40 00          	nopl   0x0(%rax)
  400de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ded:	00 00 00 

0000000000400df0 <register_tm_clones>:
  400df0:	be 00 56 60 00       	mov    $0x605600,%esi
  400df5:	55                   	push   %rbp
  400df6:	48 81 ee 00 56 60 00 	sub    $0x605600,%rsi
  400dfd:	48 c1 fe 03          	sar    $0x3,%rsi
  400e01:	48 89 e5             	mov    %rsp,%rbp
  400e04:	48 89 f0             	mov    %rsi,%rax
  400e07:	48 c1 e8 3f          	shr    $0x3f,%rax
  400e0b:	48 01 c6             	add    %rax,%rsi
  400e0e:	48 d1 fe             	sar    %rsi
  400e11:	74 15                	je     400e28 <register_tm_clones+0x38>

  400e13:	b8 00 00 00 00       	mov    $0x0,%eax
  400e18:	48 85 c0             	test   %rax,%rax
  400e1b:	74 0b                	je     400e28 <register_tm_clones+0x38>

  400e1d:	5d                   	pop    %rbp
  400e1e:	bf 00 56 60 00       	mov    $0x605600,%edi
  400e23:	ff e0                	jmpq   *%rax

  400e25:	0f 1f 00             	nopl   (%rax)
  400e28:	5d                   	pop    %rbp
  400e29:	c3                   	retq   
  400e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400e30 <__do_global_dtors_aux>:
  400e30:	80 3d f1 47 20 00 00 	cmpb   $0x0,0x2047f1(%rip)        # 605628 <completed.7594>
  400e37:	75 11                	jne    400e4a <__do_global_dtors_aux+0x1a>
  400e39:	55                   	push   %rbp
  400e3a:	48 89 e5             	mov    %rsp,%rbp
  400e3d:	e8 6e ff ff ff       	callq  400db0 <deregister_tm_clones>
  400e42:	5d                   	pop    %rbp
  400e43:	c6 05 de 47 20 00 01 	movb   $0x1,0x2047de(%rip)        # 605628 <completed.7594>
  400e4a:	f3 c3                	repz retq 
  400e4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400e50 <frame_dummy>:
  400e50:	bf 10 3e 60 00       	mov    $0x603e10,%edi
  400e55:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400e59:	75 05                	jne    400e60 <frame_dummy+0x10>
  400e5b:	eb 93                	jmp    400df0 <register_tm_clones>
  400e5d:	0f 1f 00             	nopl   (%rax)
  400e60:	b8 00 00 00 00       	mov    $0x0,%eax
  400e65:	48 85 c0             	test   %rax,%rax
  400e68:	74 f1                	je     400e5b <frame_dummy+0xb>
  400e6a:	55                   	push   %rbp
  400e6b:	48 89 e5             	mov    %rsp,%rbp
  400e6e:	ff d0                	callq  *%rax
  400e70:	5d                   	pop    %rbp
  400e71:	e9 7a ff ff ff       	jmpq   400df0 <register_tm_clones>

0000000000400e76 <main>:
  400e76:	53                   	push   %rbx
  400e77:	83 ff 01             	cmp    $0x1,%edi
  400e7a:	75 10                	jne    400e8c <main+0x16>

  400e7c:	48 8b 05 8d 47 20 00 	mov    0x20478d(%rip),%rax        # 605610 <stdin@@GLIBC_2.2.5>
  400e83:	48 89 05 a6 47 20 00 	mov    %rax,0x2047a6(%rip)        # 605630 <infile>
  400e8a:	eb 63                	jmp    400eef <main+0x79>

  ->400e8c:	48 89 f3             	mov    %rsi,%rbx
  400e8f:	83 ff 02             	cmp    $0x2,%edi
  400e92:	75 3a                	jne    400ece <main+0x58>

  400e94:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400e98:	be c4 27 40 00       	mov    $0x4027c4,%esi
  400e9d:	e8 3e fe ff ff       	callq  400ce0 <fopen@plt>
  400ea2:	48 89 05 87 47 20 00 	mov    %rax,0x204787(%rip)        # 605630 <infile>
  400ea9:	48 85 c0             	test   %rax,%rax
  400eac:	75 41                	jne    400eef <main+0x79>

  400eae:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  400eb2:	48 8b 13             	mov    (%rbx),%rdx
  400eb5:	be c6 27 40 00       	mov    $0x4027c6,%esi
  400eba:	bf 01 00 00 00       	mov    $0x1,%edi
  400ebf:	e8 0c fe ff ff       	callq  400cd0 <__printf_chk@plt>
  400ec4:	bf 08 00 00 00       	mov    $0x8,%edi
  400ec9:	e8 32 fe ff ff       	callq  400d00 <exit@plt>
  ->400ece:	48 8b 16             	mov    (%rsi),%rdx
  400ed1:	be e3 27 40 00       	mov    $0x4027e3,%esi
  400ed6:	bf 01 00 00 00       	mov    $0x1,%edi
  400edb:	b8 00 00 00 00       	mov    $0x0,%eax
  400ee0:	e8 eb fd ff ff       	callq  400cd0 <__printf_chk@plt>
  400ee5:	bf 08 00 00 00       	mov    $0x8,%edi
  400eea:	e8 11 fe ff ff       	callq  400d00 <exit@plt>
  ->400eef:	e8 61 06 00 00       	callq  401555 <initialize_bomb>
  400ef4:	bf 48 28 40 00       	mov    $0x402848,%edi
  400ef9:	e8 e2 fc ff ff       	callq  400be0 <puts@plt>
  400efe:	bf 88 28 40 00       	mov    $0x402888,%edi
  400f03:	e8 d8 fc ff ff       	callq  400be0 <puts@plt>
  400f08:	e8 43 09 00 00       	callq  401850 <read_line>
  400f0d:	48 89 c7             	mov    %rax,%rdi
  400f10:	e8 98 00 00 00       	callq  400fad <phase_1>
  400f15:	e8 64 0a 00 00       	callq  40197e <phase_defused>

  400f1a:	bf b8 28 40 00       	mov    $0x4028b8,%edi
  400f1f:	e8 bc fc ff ff       	callq  400be0 <puts@plt>
  400f24:	e8 27 09 00 00       	callq  401850 <read_line>
  400f29:	48 89 c7             	mov    %rax,%rdi
  400f2c:	e8 98 00 00 00       	callq  400fc9 <phase_2>
  400f31:	e8 48 0a 00 00       	callq  40197e <phase_defused>

  400f36:	bf fd 27 40 00       	mov    $0x4027fd,%edi
  400f3b:	e8 a0 fc ff ff       	callq  400be0 <puts@plt>
  400f40:	e8 0b 09 00 00       	callq  401850 <read_line>
  400f45:	48 89 c7             	mov    %rax,%rdi
  400f48:	e8 e6 00 00 00       	callq  401033 <phase_3>
  400f4d:	e8 2c 0a 00 00       	callq  40197e <phase_defused>

  400f52:	bf 1b 28 40 00       	mov    $0x40281b,%edi
  400f57:	e8 84 fc ff ff       	callq  400be0 <puts@plt>
  400f5c:	e8 ef 08 00 00       	callq  401850 <read_line>
  400f61:	48 89 c7             	mov    %rax,%rdi
  400f64:	e8 84 02 00 00       	callq  4011ed <phase_4>
  400f69:	e8 10 0a 00 00       	callq  40197e <phase_defused>
  400f6e:	bf e8 28 40 00       	mov    $0x4028e8,%edi
  400f73:	e8 68 fc ff ff       	callq  400be0 <puts@plt>
  400f78:	e8 d3 08 00 00       	callq  401850 <read_line>
  400f7d:	48 89 c7             	mov    %rax,%rdi
  400f80:	e8 d7 02 00 00       	callq  40125c <phase_5>
  400f85:	e8 f4 09 00 00       	callq  40197e <phase_defused>
  400f8a:	bf 2a 28 40 00       	mov    $0x40282a,%edi
  400f8f:	e8 4c fc ff ff       	callq  400be0 <puts@plt>
  400f94:	e8 b7 08 00 00       	callq  401850 <read_line>
  400f99:	48 89 c7             	mov    %rax,%rdi
  400f9c:	e8 43 03 00 00       	callq  4012e4 <phase_6>
  400fa1:	e8 d8 09 00 00       	callq  40197e <phase_defused>
  400fa6:	b8 00 00 00 00       	mov    $0x0,%eax
  400fab:	5b                   	pop    %rbx
  400fac:	c3                   	retq   

0000000000400fad <phase_1>:
  400fad:	48 83 ec 08          	sub    $0x8,%rsp
  400fb1:	be 0c 29 40 00       	mov    $0x40290c,%esi
  400fb6:	e8 4d 05 00 00       	callq  401508 <strings_not_equal>
  400fbb:	85 c0                	test   %eax,%eax
  400fbd:	74 05                	je     400fc4 <phase_1+0x17>

  400fbf:	e8 17 08 00 00       	callq  4017db <explode_bomb>
  400fc4:	48 83 c4 08          	add    $0x8,%rsp
  400fc8:	c3                   	retq   

0000000000400fc9 <phase_2>:
  400fc9:	53                   	push   %rbx
  400fca:	48 83 ec 20          	sub    $0x20,%rsp
  400fce:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400fd5:	00 00 
  400fd7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400fdc:	31 c0                	xor    %eax,%eax
  400fde:	48 89 e6             	mov    %rsp,%rsi
  400fe1:	e8 2b 08 00 00       	callq  401811 <read_six_numbers>
  400fe6:	83 3c 24 00          	cmpl   $0x0,(%rsp)
  400fea:	79 05                	jns    400ff1 <phase_2+0x28>
  400fec:	e8 ea 07 00 00       	callq  4017db <explode_bomb>    //explode if ((rsp) < 0)

  ->400ff1:	bb 01 00 00 00       	mov    $0x1,%ebx
  400ff6:	eb 1b                	jmp    401013 <phase_2+0x4a>    //while
  ->400ff8:	48 63 c3             	movslq %ebx,%rax
  400ffb:	8d 53 ff             	lea    -0x1(%rbx),%edx
  400ffe:	48 63 d2             	movslq %edx,%rdx
  401001:	89 d9                	mov    %ebx,%ecx
  401003:	03 0c 94             	add    (%rsp,%rdx,4),%ecx
  401006:	39 0c 84             	cmp    %ecx,(%rsp,%rax,4)
  401009:	74 05                	je     401010 <phase_2+0x47>
  40100b:	e8 cb 07 00 00       	callq  4017db <explode_bomb>    //explode if (rsp[rax] != rcx)

  ->401010:	83 c3 01             	add    $0x1,%ebx
  ->401013:	83 fb 05             	cmp    $0x5,%ebx
  401016:	7e e0                	jle    400ff8 <phase_2+0x2f>    //end of while

  401018:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40101d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401024:	00 00 
  401026:	74 05                	je     40102d <phase_2+0x64>
  401028:	e8 d3 fb ff ff       	callq  400c00 <__stack_chk_fail@plt>
  40102d:	48 83 c4 20          	add    $0x20,%rsp
  401031:	5b                   	pop    %rbx
  401032:	c3                   	retq   

0000000000401033 <phase_3>:
  401033:	48 83 ec 28          	sub    $0x28,%rsp
  401037:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40103e:	00 00 
  401040:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  401045:	31 c0                	xor    %eax,%eax
  401047:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
  40104c:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
  401051:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  401056:	be 20 29 40 00       	mov    $0x402920,%esi
  40105b:	e8 60 fc ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  401060:	83 f8 02             	cmp    $0x2,%eax
  401063:	7f 05                	jg     40106a <phase_3+0x37>  //explode if (rax <= 2)
  401065:	e8 71 07 00 00       	callq  4017db <explode_bomb>

  ->40106a:	83 7c 24 10 07       	cmpl   $0x7,0x10(%rsp)
  40106f:	0f 87 d7 00 00 00    	ja     40114c <phase_3+0x119> //explode if ((unsigned)(rsp)+16 > 7)
  401075:	8b 44 24 10          	mov    0x10(%rsp),%eax
  401079:	ff 24 c5 40 29 40 00 	jmpq   *0x402940(,%rax,8)

----------------------------<seem useless>---------------------------------------------
  // rax = 0
  401080:	81 7c 24 14 dc 01 00 	cmpl   $0x1dc,0x14(%rsp)
  401087:	00 
  401088:	0f 84 ca 00 00 00    	je     401158 <phase_3+0x125> //explode if (rsp[20] != 0x1dc)
  40108e:	e8 48 07 00 00       	callq  4017db <explode_bomb>

  401093:	b8 62 00 00 00       	mov    $0x62,%eax
  401098:	e9 f1 00 00 00       	jmpq   40118e <phase_3+0x15b> //exit switch block?

  // rax = 1
  40109d:	83 7c 24 14 78       	cmpl   $0x78,0x14(%rsp)
  4010a2:	0f 84 b7 00 00 00    	je     40115f <phase_3+0x12c>
  4010a8:	e8 2e 07 00 00       	callq  4017db <explode_bomb>

  // rax = 2
  4010ad:	b8 66 00 00 00       	mov    $0x66,%eax
  4010b2:	e9 d7 00 00 00       	jmpq   40118e <phase_3+0x15b>
  4010b7:	81 7c 24 14 e1 02 00 	cmpl   $0x2e1,0x14(%rsp)
  4010be:	00 
  4010bf:	0f 84 a1 00 00 00    	je     401166 <phase_3+0x133>
  4010c5:	e8 11 07 00 00       	callq  4017db <explode_bomb>

  // rax = 3
  4010ca:	b8 68 00 00 00       	mov    $0x68,%eax
  4010cf:	e9 ba 00 00 00       	jmpq   40118e <phase_3+0x15b>
  4010d4:	81 7c 24 14 ff 00 00 	cmpl   $0xff,0x14(%rsp)
  4010db:	00 
  4010dc:	0f 84 8b 00 00 00    	je     40116d <phase_3+0x13a>
  4010e2:	e8 f4 06 00 00       	callq  4017db <explode_bomb>

  // rax = 4
  4010e7:	b8 6f 00 00 00       	mov    $0x6f,%eax
  4010ec:	e9 9d 00 00 00       	jmpq   40118e <phase_3+0x15b>
  4010f1:	81 7c 24 14 9c 00 00 	cmpl   $0x9c,0x14(%rsp)
  4010f8:	00 
  4010f9:	74 79                	je     401174 <phase_3+0x141>
  4010fb:	e8 db 06 00 00       	callq  4017db <explode_bomb>
  
  // rax = 5
  401100:	b8 66 00 00 00       	mov    $0x66,%eax
  401105:	e9 84 00 00 00       	jmpq   40118e <phase_3+0x15b>
  40110a:	81 7c 24 14 38 03 00 	cmpl   $0x338,0x14(%rsp)
  401111:	00 
  401112:	74 67                	je     40117b <phase_3+0x148>
  401114:	e8 c2 06 00 00       	callq  4017db <explode_bomb>

  // rax = 6
  401119:	b8 62 00 00 00       	mov    $0x62,%eax
  40111e:	eb 6e                	jmp    40118e <phase_3+0x15b>
  401120:	81 7c 24 14 b6 01 00 	cmpl   $0x1b6,0x14(%rsp)
  401127:	00 
  401128:	74 58                	je     401182 <phase_3+0x14f>
  40112a:	e8 ac 06 00 00       	callq  4017db <explode_bomb>

  // rax = 7
  40112f:	b8 73 00 00 00       	mov    $0x73,%eax
  401134:	eb 58                	jmp    40118e <phase_3+0x15b>
  401136:	81 7c 24 14 44 02 00 	cmpl   $0x244,0x14(%rsp)
  40113d:	00 
  40113e:	74 49                	je     401189 <phase_3+0x156>  //explode if (rsp[20] != 0x244)
  401140:	e8 96 06 00 00       	callq  4017db <explode_bomb>

  401145:	b8 6e 00 00 00       	mov    $0x6e,%eax
  40114a:	eb 42                	jmp    40118e <phase_3+0x15b>  //exit switch block?
----------------------------</seem useless>---------------------------------------------

  ->40114c:	e8 8a 06 00 00       	callq  4017db <explode_bomb>

  401151:	b8 6d 00 00 00       	mov    $0x6d,%eax
  401156:	eb 36                	jmp    40118e <phase_3+0x15b>
  401158:	b8 62 00 00 00       	mov    $0x62,%eax
  40115d:	eb 2f                	jmp    40118e <phase_3+0x15b>
  40115f:	b8 66 00 00 00       	mov    $0x66,%eax
  401164:	eb 28                	jmp    40118e <phase_3+0x15b>
  401166:	b8 68 00 00 00       	mov    $0x68,%eax
  40116b:	eb 21                	jmp    40118e <phase_3+0x15b>
  40116d:	b8 6f 00 00 00       	mov    $0x6f,%eax
  401172:	eb 1a                	jmp    40118e <phase_3+0x15b>
  401174:	b8 66 00 00 00       	mov    $0x66,%eax
  401179:	eb 13                	jmp    40118e <phase_3+0x15b>
  40117b:	b8 62 00 00 00       	mov    $0x62,%eax
  401180:	eb 0c                	jmp    40118e <phase_3+0x15b>
  401182:	b8 73 00 00 00       	mov    $0x73,%eax
  401187:	eb 05                	jmp    40118e <phase_3+0x15b>
  ->401189:	b8 6e 00 00 00       	mov    $0x6e,%eax

  ->40118e:	3a 44 24 0f          	cmp    0xf(%rsp),%al
  401192:	74 05                	je     401199 <phase_3+0x166>  //explode if (al != rsp[16])
  401194:	e8 42 06 00 00       	callq  4017db <explode_bomb>

  ->401199:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40119e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4011a5:	00 00 
  4011a7:	74 05                	je     4011ae <phase_3+0x17b>
  4011a9:	e8 52 fa ff ff       	callq  400c00 <__stack_chk_fail@plt>
  4011ae:	48 83 c4 28          	add    $0x28,%rsp
  4011b2:	c3                   	retq   

00000000004011b3 <func4>:
  4011b3:	85 ff                	test   %edi,%edi
  4011b5:	7e 28                	jle    4011df <func4+0x2c>  // Never rdi<=0
  4011b7:	83 ff 01             	cmp    $0x1,%edi
  4011ba:	74 29                	je     4011e5 <func4+0x32>
  4011bc:	41 54                	push   %r12
  4011be:	55                   	push   %rbp
  4011bf:	53                   	push   %rbx
  4011c0:	89 f3                	mov    %esi,%ebx
  4011c2:	89 fd                	mov    %edi,%ebp
  4011c4:	8d 7f ff             	lea    -0x1(%rdi),%edi
  4011c7:	e8 e7 ff ff ff       	callq  4011b3 <func4>
  4011cc:	44 8d 24 03          	lea    (%rbx,%rax,1),%r12d
  4011d0:	8d 7d fe             	lea    -0x2(%rbp),%edi
  4011d3:	89 de                	mov    %ebx,%esi
  4011d5:	e8 d9 ff ff ff       	callq  4011b3 <func4>
  4011da:	44 01 e0             	add    %r12d,%eax
  4011dd:	eb 09                	jmp    4011e8 <func4+0x35>
  4011df:	b8 00 00 00 00       	mov    $0x0,%eax
  4011e4:	c3                   	retq   
  4011e5:	89 f0                	mov    %esi,%eax
  4011e7:	c3                   	retq   
  4011e8:	5b                   	pop    %rbx
  4011e9:	5d                   	pop    %rbp
  4011ea:	41 5c                	pop    %r12
  4011ec:	c3                   	retq   

00000000004011ed <phase_4>:
  4011ed:	48 83 ec 18          	sub    $0x18,%rsp
  4011f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4011f8:	00 00 
  4011fa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4011ff:	31 c0                	xor    %eax,%eax
  401201:	48 89 e1             	mov    %rsp,%rcx
  401204:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  401209:	be 38 2c 40 00       	mov    $0x402c38,%esi
  40120e:	e8 ad fa ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  401213:	83 f8 02             	cmp    $0x2,%eax
  401216:	75 0d                	jne    401225 <phase_4+0x38>  //explode if (??? != 2)
  401218:	8b 04 24             	mov    (%rsp),%eax
  40121b:	83 f8 01             	cmp    $0x1,%eax
  40121e:	7e 05                	jle    401225 <phase_4+0x38>  //explode if (arg2 <= 1)
  401220:	83 f8 04             	cmp    $0x4,%eax
  401223:	7e 05                	jle    40122a <phase_4+0x3d>  //explode if (arg2 > 4)
  401225:	e8 b1 05 00 00       	callq  4017db <explode_bomb>

  ->40122a:	8b 34 24             	mov    (%rsp),%esi
  40122d:	bf 07 00 00 00       	mov    $0x7,%edi
  401232:	e8 7c ff ff ff       	callq  4011b3 <func4>
  401237:	3b 44 24 04          	cmp    0x4(%rsp),%eax
  40123b:	74 05                	je     401242 <phase_4+0x55>  //explode if (rax != *(rsp+4))
  40123d:	e8 99 05 00 00       	callq  4017db <explode_bomb>

  401242:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401247:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40124e:	00 00 
  401250:	74 05                	je     401257 <phase_4+0x6a>
  401252:	e8 a9 f9 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  401257:	48 83 c4 18          	add    $0x18,%rsp
  40125b:	c3                   	retq   

000000000040125c <phase_5>:
  40125c:	48 83 ec 18          	sub    $0x18,%rsp
  401260:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401267:	00 00 
  401269:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40126e:	31 c0                	xor    %eax,%eax
  401270:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  401275:	48 89 e2             	mov    %rsp,%rdx
  401278:	be 38 2c 40 00       	mov    $0x402c38,%esi
  40127d:	e8 3e fa ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  401282:	83 f8 01             	cmp    $0x1,%eax
  401285:	7f 05                	jg     40128c <phase_5+0x30>
  401287:	e8 4f 05 00 00       	callq  4017db <explode_bomb>

  ->40128c:	8b 04 24             	mov    (%rsp),%eax
  40128f:	83 e0 0f             	and    $0xf,%eax
  401292:	89 04 24             	mov    %eax,(%rsp)
  401295:	b9 00 00 00 00       	mov    $0x0,%ecx
  40129a:	ba 00 00 00 00       	mov    $0x0,%edx
  40129f:	eb 11                	jmp    4012b2 <phase_5+0x56>

-------------------------while(eax != 15)-------------------------------------
  ->4012a1:	83 c2 01             	add    $0x1,%edx
  4012a4:	48 98                	cltq   
  4012a6:	8b 04 85 80 29 40 00 	mov    0x402980(,%rax,4),%eax
  4012ad:	89 04 24             	mov    %eax,(%rsp)
  4012b0:	01 c1                	add    %eax,%ecx
  ->4012b2:	8b 04 24             	mov    (%rsp),%eax
  4012b5:	83 f8 0f             	cmp    $0xf,%eax
  4012b8:	75 e7                	jne    4012a1 <phase_5+0x45>
-------------------------while(eax != 15)-------------------------------------

  4012ba:	83 fa 0f             	cmp    $0xf,%edx
  4012bd:	75 06                	jne    4012c5 <phase_5+0x69>  //explode if (edx != 15)
  4012bf:	3b 4c 24 04          	cmp    0x4(%rsp),%ecx
  4012c3:	74 05                	je     4012ca <phase_5+0x6e>  //explode if (ecx != *(rsp+4))
  ->4012c5:	e8 11 05 00 00       	callq  4017db <explode_bomb>
  ->4012ca:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4012cf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4012d6:	00 00 
  4012d8:	74 05                	je     4012df <phase_5+0x83>
  4012da:	e8 21 f9 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  4012df:	48 83 c4 18          	add    $0x18,%rsp
  4012e3:	c3                   	retq   

00000000004012e4 <phase_6>:
  4012e4:	41 54                	push   %r12
  4012e6:	55                   	push   %rbp
  4012e7:	53                   	push   %rbx
  4012e8:	48 83 ec 60          	sub    $0x60,%rsp
  4012ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4012f3:	00 00 
  4012f5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  4012fa:	31 c0                	xor    %eax,%eax
  4012fc:	48 89 e6             	mov    %rsp,%rsi
  4012ff:	e8 0d 05 00 00       	callq  401811 <read_six_numbers>  // store in (rsp)
  401304:	bd 00 00 00 00       	mov    $0x0,%ebp              //rbp = 0
  401309:	eb 3a                	jmp    401345 <phase_6+0x61>

------------------------for(rbp = 0; rbp <= 5; rbp++)---------------------------------------
  ->40130b:	48 63 c5             	movslq %ebp,%rax              // rax = rbp
  40130e:	8b 04 84             	mov    (%rsp,%rax,4),%eax     // rax = rsp[rbp]
  401311:	83 e8 01             	sub    $0x1,%eax              // rax--
  401314:	83 f8 05             	cmp    $0x5,%eax
  401317:	76 05                	jbe    40131e <phase_6+0x3a>  // explode if ((usigned)rax > 5)
  401319:	e8 bd 04 00 00       	callq  4017db <explode_bomb>  // 1 <= rsp[i] <= 6

  ->40131e:	44 8d 65 01          	lea    0x1(%rbp),%r12d        // r12d = rbp + 1
  401322:	44 89 e3             	mov    %r12d,%ebx             // rbx = rbp + 1 (store rbp++)
  401325:	eb 16                	jmp    40133d <phase_6+0x59>

          --------------for(rbx = rbp + 1; rbx <= 5; rbx++)-------------
  ->401327:	48 63 c5             	movslq %ebp,%rax              // rax = rbp
  40132a:	48 63 d3             	movslq %ebx,%rdx              // rdx = rbx
  40132d:	8b 3c 94             	mov    (%rsp,%rdx,4),%edi     // rdi = rsp[rbx]
  401330:	39 3c 84             	cmp    %edi,(%rsp,%rax,4)
  401333:	75 05                	jne    40133a <phase_6+0x56>  // explode if (rsp[rbp] == rsp[rbx])
  401335:	e8 a1 04 00 00       	callq  4017db <explode_bomb>
  ->40133a:	83 c3 01             	add    $0x1,%ebx         // rbx++
  ->40133d:	83 fb 05             	cmp    $0x5,%ebx
  401340:	7e e5                	jle    401327 <phase_6+0x43>
          --------------for(rbx = rbp + 1; rbx <= 5; rbx++)-------------

  401342:	44 89 e5             	mov    %r12d,%ebp        // rbp = r12d (rbx++)
  ->401345:	83 fd 05             	cmp    $0x5,%ebp
  401348:	7e c1                	jle    40130b <phase_6+0x27>  // while (rbp <= 5)
------------------------for(rbp = 0; rbp <= 5; rbp++)---------------------------------------

  40134a:	be 00 00 00 00       	mov    $0x0,%esi
  40134f:	eb 23                	jmp    401374 <phase_6+0x90>



________________________for(rsi = 0; rsi <= 5; rsi++)_______________________________________

  ->401351:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  401355:	83 c0 01             	add    $0x1,%eax              // rax = 6 !
  401358:	eb 0a                	jmp    401364 <phase_6+0x80>

  ->40135a:	b8 01 00 00 00       	mov    $0x1,%eax
  40135f:	ba 00 43 60 00       	mov    $0x604300,%edx
  ->401364:	48 63 ce             	movslq %esi,%rcx
  401367:	3b 04 8c             	cmp    (%rsp,%rcx,4),%eax     // loop while (rsp[rcx] < 1)
  40136a:	7c e5                	jl     401351 <phase_6+0x6d>

  40136c:	48 89 54 cc 20       	mov    %rdx,0x20(%rsp,%rcx,8) // while(rcx==0) rsp[8]=rdx
  401371:	83 c6 01             	add    $0x1,%esi
  ->401374:	83 fe 05             	cmp    $0x5,%esi
  401377:	7e e1                	jle    40135a <phase_6+0x76>  // loop while (rsi <= 5)

____________________end of for(rsi = 0; rsi <= 5; rsi++)____________________________________

  // rsp + 8: &node_rsp[0] 0 &node_rsp[1] 0 &node_rsp[2] 0 &node_rsp[3] 0 &node_rsp[4] 0 &node_rsp[5] 0

  401379:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx  // rbx = &node_rsp[0]
  40137e:	48 89 d9             	mov    %rbx,%rcx        // rcx = rbx = &node_rsp[0]
  401381:	b8 01 00 00 00       	mov    $0x1,%eax        // rax = 1
  401386:	eb 12                	jmp    40139a <phase_6+0xb6>

------------------------for(rax = 1; rax <= 5; rax++)---------------------------------------
  ->401388:	48 63 d0             	movslq %eax,%rdx       // rdx = rax
  40138b:	48 8b 54 d4 20       	mov    0x20(%rsp,%rdx,8),%rdx  // rdx = &node_rsp[rax]
  401390:	48 89 51 08          	mov    %rdx,0x8(%rcx)  // rcx->next = rdx;
  401394:	83 c0 01             	add    $0x1,%eax       // rax++
  401397:	48 89 d1             	mov    %rdx,%rcx       // rcx = rcx->next;
  ->40139a:	83 f8 05             	cmp    $0x5,%eax
  40139d:	7e e9                	jle    401388 <phase_6+0xa4>
------------------------for(rax = 1; rax <= 5; rax++)---------------------------------------

// relink 6 nodes in respect of the six number you just put in. 2->3->1->6->4->5, for eg

  40139f:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)  // rcx->next = 0
  4013a6:	00 
  4013a7:	bd 00 00 00 00       	mov    $0x0,%ebp       // rbp = 0
  4013ac:	eb 16                	jmp    4013c4 <phase_6+0xe0>

-----for(rbp = 0; rbp <= 4; rbp++):
  ->4013ae:	48 8b 43 08          	mov    0x8(%rbx),%rax     // rax = rbx->next
  4013b2:	8b 00                	mov    (%rax),%eax        // rax = rbx->next->val
  4013b4:	39 03                	cmp    %eax,(%rbx)        // explode if (rbx->val > rax)
  4013b6:	7e 05                	jle    4013bd <phase_6+0xd9>
  4013b8:	e8 1e 04 00 00       	callq  4017db <explode_bomb>
  ->4013bd:	48 8b 5b 08          	mov    0x8(%rbx),%rbx     // rbx = rbx->next
  4013c1:	83 c5 01             	add    $0x1,%ebp          // rbp++
  ->4013c4:	83 fd 04             	cmp    $0x4,%ebp
  4013c7:	7e e5                	jle    4013ae <phase_6+0xca>
-----end------

  4013c9:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4013ce:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4013d5:	00 00 
  4013d7:	74 05                	je     4013de <phase_6+0xfa>
  4013d9:	e8 22 f8 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  4013de:	48 83 c4 60          	add    $0x60,%rsp
  4013e2:	5b                   	pop    %rbx
  4013e3:	5d                   	pop    %rbp
  4013e4:	41 5c                	pop    %r12
  4013e6:	c3                   	retq   

00000000004013e7 <fun7>:              // should return 5
  4013e7:	48 83 ec 08          	sub    $0x8,%rsp
  4013eb:	48 85 ff             	test   %rdi,%rdi
  4013ee:	74 26                	je     401416 <fun7+0x2f>   // if (rdi == 0) return -1
  4013f0:	8b 07                	mov    (%rdi),%eax          // rax = rdi->val
  4013f2:	39 f0                	cmp    %esi,%eax
  4013f4:	7e 0d                	jle    401403 <fun7+0x1c>   // jmp if (rdi->val <= rsi)
  4013f6:	48 8b 7f 08          	mov    0x8(%rdi),%rdi       // rdi = rdi->left
  4013fa:	e8 e8 ff ff ff       	callq  4013e7 <fun7>
  4013ff:	01 c0                	add    %eax,%eax            // rax *= 2
  401401:	eb 1f                	jmp    401422 <fun7+0x3b>   // return

  ->401403:	39 f0                	cmp    %esi,%eax
  401405:	74 16                	je     40141d <fun7+0x36>   // return 0 if (rsi == rax)

  401407:	48 8b 7f 10          	mov    0x10(%rdi),%rdi      // rdi = rdi->right
  40140b:	e8 d7 ff ff ff       	callq  4013e7 <fun7>
  401410:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax // 
  401414:	eb 0c                	jmp    401422 <fun7+0x3b>   // return 2*rax + 1

  ->401416:	b8 ff ff ff ff       	mov    $0xffffffff,%eax     // return -1
  40141b:	eb 05                	jmp    401422 <fun7+0x3b>

  ->40141d:	b8 00 00 00 00       	mov    $0x0,%eax
  ->401422:	48 83 c4 08          	add    $0x8,%rsp
  401426:	c3                   	retq   

0000000000401427 <secret_phase>:
  401427:	53                   	push   %rbx
  401428:	e8 23 04 00 00       	callq  401850 <read_line>
  40142d:	ba 0a 00 00 00       	mov    $0xa,%edx
  401432:	be 00 00 00 00       	mov    $0x0,%esi
  401437:	48 89 c7             	mov    %rax,%rdi
  40143a:	e8 51 f8 ff ff       	callq  400c90 <strtol@plt>
  40143f:	48 89 c3             	mov    %rax,%rbx           // rbx = rax
  401442:	8d 40 ff             	lea    -0x1(%rax),%eax     // rax = rax - 1
  401445:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  40144a:	76 05                	jbe    401451 <secret_phase+0x2a>  // explode if ((u)rax > 1000)
  40144c:	e8 8a 03 00 00       	callq  4017db <explode_bomb>

  ->401451:	89 de                	mov    %ebx,%esi        // rsi = rbx
  401453:	bf 20 41 60 00       	mov    $0x604120,%edi   // rdi = &n1
  401458:	e8 8a ff ff ff       	callq  4013e7 <fun7>
  40145d:	83 f8 05             	cmp    $0x5,%eax        // fun7 should set (rax = 5)
  401460:	74 05                	je     401467 <secret_phase+0x40>
  401462:	e8 74 03 00 00       	callq  4017db <explode_bomb>

  401467:	bf c0 29 40 00       	mov    $0x4029c0,%edi
  40146c:	e8 6f f7 ff ff       	callq  400be0 <puts@plt>
  401471:	e8 08 05 00 00       	callq  40197e <phase_defused>
  401476:	5b                   	pop    %rbx
  401477:	c3                   	retq   

0000000000401478 <sig_handler>:
  401478:	48 83 ec 08          	sub    $0x8,%rsp
  40147c:	bf e8 29 40 00       	mov    $0x4029e8,%edi
  401481:	e8 5a f7 ff ff       	callq  400be0 <puts@plt>
  401486:	bf 03 00 00 00       	mov    $0x3,%edi
  40148b:	e8 a0 f8 ff ff       	callq  400d30 <sleep@plt>
  401490:	be b1 2b 40 00       	mov    $0x402bb1,%esi
  401495:	bf 01 00 00 00       	mov    $0x1,%edi
  40149a:	b8 00 00 00 00       	mov    $0x0,%eax
  40149f:	e8 2c f8 ff ff       	callq  400cd0 <__printf_chk@plt>
  4014a4:	48 8b 3d 55 41 20 00 	mov    0x204155(%rip),%rdi        # 605600 <stdout@@GLIBC_2.2.5>
  4014ab:	e8 00 f8 ff ff       	callq  400cb0 <fflush@plt>
  4014b0:	bf 01 00 00 00       	mov    $0x1,%edi
  4014b5:	e8 76 f8 ff ff       	callq  400d30 <sleep@plt>
  4014ba:	bf b9 2b 40 00       	mov    $0x402bb9,%edi
  4014bf:	e8 1c f7 ff ff       	callq  400be0 <puts@plt>
  4014c4:	bf 10 00 00 00       	mov    $0x10,%edi
  4014c9:	e8 32 f8 ff ff       	callq  400d00 <exit@plt>

00000000004014ce <invalid_phase>:
  4014ce:	48 83 ec 08          	sub    $0x8,%rsp
  4014d2:	48 89 fa             	mov    %rdi,%rdx
  4014d5:	be c1 2b 40 00       	mov    $0x402bc1,%esi
  4014da:	bf 01 00 00 00       	mov    $0x1,%edi
  4014df:	b8 00 00 00 00       	mov    $0x0,%eax
  4014e4:	e8 e7 f7 ff ff       	callq  400cd0 <__printf_chk@plt>
  4014e9:	bf 08 00 00 00       	mov    $0x8,%edi
  4014ee:	e8 0d f8 ff ff       	callq  400d00 <exit@plt>

00000000004014f3 <string_length>:
  4014f3:	b8 00 00 00 00       	mov    $0x0,%eax
  4014f8:	eb 07                	jmp    401501 <string_length+0xe>
  4014fa:	48 83 c7 01          	add    $0x1,%rdi
  4014fe:	83 c0 01             	add    $0x1,%eax
  401501:	80 3f 00             	cmpb   $0x0,(%rdi)
  401504:	75 f4                	jne    4014fa <string_length+0x7>
  401506:	f3 c3                	repz retq 

0000000000401508 <strings_not_equal>:
  401508:	41 54                	push   %r12
  40150a:	55                   	push   %rbp
  40150b:	53                   	push   %rbx
  40150c:	48 89 fb             	mov    %rdi,%rbx
  40150f:	48 89 f5             	mov    %rsi,%rbp
  401512:	e8 dc ff ff ff       	callq  4014f3 <string_length>
  401517:	41 89 c4             	mov    %eax,%r12d
  40151a:	48 89 ef             	mov    %rbp,%rdi
  40151d:	e8 d1 ff ff ff       	callq  4014f3 <string_length>
  401522:	41 39 c4             	cmp    %eax,%r12d
  401525:	75 1d                	jne    401544 <strings_not_equal+0x3c>
  401527:	eb 0d                	jmp    401536 <strings_not_equal+0x2e>
  401529:	3a 45 00             	cmp    0x0(%rbp),%al
  40152c:	75 1d                	jne    40154b <strings_not_equal+0x43>
  40152e:	48 83 c3 01          	add    $0x1,%rbx
  401532:	48 83 c5 01          	add    $0x1,%rbp
  401536:	0f b6 03             	movzbl (%rbx),%eax
  401539:	84 c0                	test   %al,%al
  40153b:	75 ec                	jne    401529 <strings_not_equal+0x21>
  40153d:	b8 00 00 00 00       	mov    $0x0,%eax
  401542:	eb 0c                	jmp    401550 <strings_not_equal+0x48>
  401544:	b8 01 00 00 00       	mov    $0x1,%eax
  401549:	eb 05                	jmp    401550 <strings_not_equal+0x48>
  40154b:	b8 01 00 00 00       	mov    $0x1,%eax
  401550:	5b                   	pop    %rbx
  401551:	5d                   	pop    %rbp
  401552:	41 5c                	pop    %r12
  401554:	c3                   	retq   

0000000000401555 <initialize_bomb>:
  401555:	53                   	push   %rbx
  401556:	48 81 ec 50 20 00 00 	sub    $0x2050,%rsp
  40155d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401564:	00 00 
  401566:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
  40156d:	00 
  40156e:	31 c0                	xor    %eax,%eax
  401570:	be 78 14 40 00       	mov    $0x401478,%esi
  401575:	bf 02 00 00 00       	mov    $0x2,%edi
  40157a:	e8 e1 f6 ff ff       	callq  400c60 <signal@plt>
  40157f:	be 40 00 00 00       	mov    $0x40,%esi
  401584:	48 89 e7             	mov    %rsp,%rdi
  401587:	e8 64 f7 ff ff       	callq  400cf0 <gethostname@plt>
  40158c:	85 c0                	test   %eax,%eax
  40158e:	74 25                	je     4015b5 <initialize_bomb+0x60>
  401590:	bf 20 2a 40 00       	mov    $0x402a20,%edi
  401595:	e8 46 f6 ff ff       	callq  400be0 <puts@plt>
  40159a:	bf 08 00 00 00       	mov    $0x8,%edi
  40159f:	e8 5c f7 ff ff       	callq  400d00 <exit@plt>
  4015a4:	48 89 e6             	mov    %rsp,%rsi
  4015a7:	e8 04 f6 ff ff       	callq  400bb0 <strcasecmp@plt>
  4015ac:	85 c0                	test   %eax,%eax
  4015ae:	74 21                	je     4015d1 <initialize_bomb+0x7c>
  4015b0:	83 c3 01             	add    $0x1,%ebx
  4015b3:	eb 05                	jmp    4015ba <initialize_bomb+0x65>
  4015b5:	bb 00 00 00 00       	mov    $0x0,%ebx
  4015ba:	48 63 c3             	movslq %ebx,%rax
  4015bd:	48 8b 3c c5 80 53 60 	mov    0x605380(,%rax,8),%rdi
  4015c4:	00 
  4015c5:	48 85 ff             	test   %rdi,%rdi
  4015c8:	75 da                	jne    4015a4 <initialize_bomb+0x4f>
  4015ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4015cf:	eb 05                	jmp    4015d6 <initialize_bomb+0x81>
  4015d1:	b8 01 00 00 00       	mov    $0x1,%eax
  4015d6:	85 c0                	test   %eax,%eax
  4015d8:	75 14                	jne    4015ee <initialize_bomb+0x99>
  4015da:	bf 58 2a 40 00       	mov    $0x402a58,%edi
  4015df:	e8 fc f5 ff ff       	callq  400be0 <puts@plt>
  4015e4:	bf 08 00 00 00       	mov    $0x8,%edi
  4015e9:	e8 12 f7 ff ff       	callq  400d00 <exit@plt>
  4015ee:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  4015f3:	e8 c6 0e 00 00       	callq  4024be <init_driver>
  4015f8:	85 c0                	test   %eax,%eax
  4015fa:	79 23                	jns    40161f <initialize_bomb+0xca>
  4015fc:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  401601:	be d2 2b 40 00       	mov    $0x402bd2,%esi
  401606:	bf 01 00 00 00       	mov    $0x1,%edi
  40160b:	b8 00 00 00 00       	mov    $0x0,%eax
  401610:	e8 bb f6 ff ff       	callq  400cd0 <__printf_chk@plt>
  401615:	bf 08 00 00 00       	mov    $0x8,%edi
  40161a:	e8 e1 f6 ff ff       	callq  400d00 <exit@plt>
  40161f:	48 8b 84 24 48 20 00 	mov    0x2048(%rsp),%rax
  401626:	00 
  401627:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40162e:	00 00 
  401630:	74 05                	je     401637 <initialize_bomb+0xe2>
  401632:	e8 c9 f5 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  401637:	48 81 c4 50 20 00 00 	add    $0x2050,%rsp
  40163e:	5b                   	pop    %rbx
  40163f:	c3                   	retq   

0000000000401640 <initialize_bomb_solve>:
  401640:	f3 c3                	repz retq 

0000000000401642 <blank_line>:
  401642:	55                   	push   %rbp
  401643:	53                   	push   %rbx
  401644:	48 83 ec 08          	sub    $0x8,%rsp
  401648:	48 89 fd             	mov    %rdi,%rbp
  40164b:	eb 17                	jmp    401664 <blank_line+0x22>
  40164d:	e8 ee f6 ff ff       	callq  400d40 <__ctype_b_loc@plt>
  401652:	48 8b 00             	mov    (%rax),%rax
  401655:	48 83 c5 01          	add    $0x1,%rbp
  401659:	48 0f be db          	movsbq %bl,%rbx
  40165d:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  401662:	74 0f                	je     401673 <blank_line+0x31>
  401664:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
  401668:	84 db                	test   %bl,%bl
  40166a:	75 e1                	jne    40164d <blank_line+0xb>
  40166c:	b8 01 00 00 00       	mov    $0x1,%eax
  401671:	eb 05                	jmp    401678 <blank_line+0x36>
  401673:	b8 00 00 00 00       	mov    $0x0,%eax
  401678:	48 83 c4 08          	add    $0x8,%rsp
  40167c:	5b                   	pop    %rbx
  40167d:	5d                   	pop    %rbp
  40167e:	c3                   	retq   

000000000040167f <skip>:
  40167f:	53                   	push   %rbx
  401680:	48 63 05 a5 3f 20 00 	movslq 0x203fa5(%rip),%rax        # 60562c <num_input_strings>
  401687:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  40168b:	48 c1 e0 04          	shl    $0x4,%rax
  40168f:	48 89 c7             	mov    %rax,%rdi
  401692:	48 81 c7 40 56 60 00 	add    $0x605640,%rdi
  401699:	48 8b 15 90 3f 20 00 	mov    0x203f90(%rip),%rdx        # 605630 <infile>
  4016a0:	be 50 00 00 00       	mov    $0x50,%esi
  4016a5:	e8 a6 f5 ff ff       	callq  400c50 <fgets@plt>
  4016aa:	48 89 c3             	mov    %rax,%rbx
  4016ad:	48 85 c0             	test   %rax,%rax
  4016b0:	74 0c                	je     4016be <skip+0x3f>
  4016b2:	48 89 c7             	mov    %rax,%rdi
  4016b5:	e8 88 ff ff ff       	callq  401642 <blank_line>
  4016ba:	85 c0                	test   %eax,%eax
  4016bc:	75 c2                	jne    401680 <skip+0x1>
  4016be:	48 89 d8             	mov    %rbx,%rax
  4016c1:	5b                   	pop    %rbx
  4016c2:	c3                   	retq   

00000000004016c3 <send_msg>:
  4016c3:	48 81 ec 18 40 00 00 	sub    $0x4018,%rsp
  4016ca:	41 89 f8             	mov    %edi,%r8d
  4016cd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4016d4:	00 00 
  4016d6:	48 89 84 24 08 40 00 	mov    %rax,0x4008(%rsp)
  4016dd:	00 
  4016de:	31 c0                	xor    %eax,%eax
  4016e0:	8b 35 46 3f 20 00    	mov    0x203f46(%rip),%esi        # 60562c <num_input_strings>
  4016e6:	8d 46 ff             	lea    -0x1(%rsi),%eax
  4016e9:	48 98                	cltq   
  4016eb:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4016ef:	48 c1 e0 04          	shl    $0x4,%rax
  4016f3:	48 8d 90 40 56 60 00 	lea    0x605640(%rax),%rdx
  4016fa:	b8 00 00 00 00       	mov    $0x0,%eax
  4016ff:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401706:	48 89 d7             	mov    %rdx,%rdi
  401709:	f2 ae                	repnz scas %es:(%rdi),%al
  40170b:	48 f7 d1             	not    %rcx
  40170e:	48 83 c1 63          	add    $0x63,%rcx
  401712:	48 81 f9 00 20 00 00 	cmp    $0x2000,%rcx
  401719:	76 19                	jbe    401734 <send_msg+0x71>
  40171b:	be 90 2a 40 00       	mov    $0x402a90,%esi
  401720:	bf 01 00 00 00       	mov    $0x1,%edi
  401725:	e8 a6 f5 ff ff       	callq  400cd0 <__printf_chk@plt>
  40172a:	bf 08 00 00 00       	mov    $0x8,%edi
  40172f:	e8 cc f5 ff ff       	callq  400d00 <exit@plt>
  401734:	45 85 c0             	test   %r8d,%r8d
  401737:	74 07                	je     401740 <send_msg+0x7d>
  401739:	b8 ec 2b 40 00       	mov    $0x402bec,%eax
  40173e:	eb 05                	jmp    401745 <send_msg+0x82>
  401740:	b8 f4 2b 40 00       	mov    $0x402bf4,%eax
  401745:	48 83 ec 08          	sub    $0x8,%rsp
  401749:	52                   	push   %rdx
  40174a:	56                   	push   %rsi
  40174b:	50                   	push   %rax
  40174c:	41 b9 60 4b 60 00    	mov    $0x604b60,%r9d
  401752:	44 8b 05 07 3c 20 00 	mov    0x203c07(%rip),%r8d        # 605360 <bomb_id>
  401759:	b9 fd 2b 40 00       	mov    $0x402bfd,%ecx
  40175e:	ba 00 20 00 00       	mov    $0x2000,%edx
  401763:	be 01 00 00 00       	mov    $0x1,%esi
  401768:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
  40176d:	b8 00 00 00 00       	mov    $0x0,%eax
  401772:	e8 d9 f5 ff ff       	callq  400d50 <__sprintf_chk@plt>
  401777:	48 83 c4 20          	add    $0x20,%rsp
  40177b:	4c 8d 8c 24 00 20 00 	lea    0x2000(%rsp),%r9
  401782:	00 
  401783:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  401789:	48 89 e1             	mov    %rsp,%rcx
  40178c:	ba 60 43 60 00       	mov    $0x604360,%edx
  401791:	be 60 47 60 00       	mov    $0x604760,%esi
  401796:	bf 60 4f 60 00       	mov    $0x604f60,%edi
  40179b:	e8 11 0f 00 00       	callq  4026b1 <driver_post>
  4017a0:	85 c0                	test   %eax,%eax
  4017a2:	79 17                	jns    4017bb <send_msg+0xf8>
  4017a4:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  4017ab:	00 
  4017ac:	e8 2f f4 ff ff       	callq  400be0 <puts@plt>
  4017b1:	bf 00 00 00 00       	mov    $0x0,%edi
  4017b6:	e8 45 f5 ff ff       	callq  400d00 <exit@plt>
  4017bb:	48 8b 84 24 08 40 00 	mov    0x4008(%rsp),%rax
  4017c2:	00 
  4017c3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4017ca:	00 00 
  4017cc:	74 05                	je     4017d3 <send_msg+0x110>
  4017ce:	e8 2d f4 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  4017d3:	48 81 c4 18 40 00 00 	add    $0x4018,%rsp
  4017da:	c3                   	retq   

00000000004017db <explode_bomb>:
  4017db:	48 83 ec 08          	sub    $0x8,%rsp
  4017df:	bf 0c 2c 40 00       	mov    $0x402c0c,%edi
  4017e4:	e8 f7 f3 ff ff       	callq  400be0 <puts@plt>
  4017e9:	bf 15 2c 40 00       	mov    $0x402c15,%edi
  4017ee:	e8 ed f3 ff ff       	callq  400be0 <puts@plt>
  4017f3:	bf 00 00 00 00       	mov    $0x0,%edi
  4017f8:	e8 c6 fe ff ff       	callq  4016c3 <send_msg>
  4017fd:	bf b8 2a 40 00       	mov    $0x402ab8,%edi
  401802:	e8 d9 f3 ff ff       	callq  400be0 <puts@plt>
  401807:	bf 08 00 00 00       	mov    $0x8,%edi
  40180c:	e8 ef f4 ff ff       	callq  400d00 <exit@plt>

0000000000401811 <read_six_numbers>:
  401811:	48 83 ec 08          	sub    $0x8,%rsp
  401815:	48 89 f2             	mov    %rsi,%rdx
  401818:	48 8d 76 14          	lea    0x14(%rsi),%rsi
  40181c:	48 8d 42 10          	lea    0x10(%rdx),%rax
  401820:	48 8d 4a 04          	lea    0x4(%rdx),%rcx
  401824:	56                   	push   %rsi
  401825:	50                   	push   %rax
  401826:	4c 8d 4a 0c          	lea    0xc(%rdx),%r9
  40182a:	4c 8d 42 08          	lea    0x8(%rdx),%r8
  40182e:	be 2c 2c 40 00       	mov    $0x402c2c,%esi
  401833:	b8 00 00 00 00       	mov    $0x0,%eax
  401838:	e8 83 f4 ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  40183d:	48 83 c4 10          	add    $0x10,%rsp
  401841:	83 f8 05             	cmp    $0x5,%eax
  401844:	7f 05                	jg     40184b <read_six_numbers+0x3a>
  401846:	e8 90 ff ff ff       	callq  4017db <explode_bomb>
  40184b:	48 83 c4 08          	add    $0x8,%rsp
  40184f:	c3                   	retq   

0000000000401850 <read_line>:
  401850:	48 83 ec 08          	sub    $0x8,%rsp
  401854:	b8 00 00 00 00       	mov    $0x0,%eax
  401859:	e8 21 fe ff ff       	callq  40167f <skip>
  40185e:	48 85 c0             	test   %rax,%rax
  401861:	75 6e                	jne    4018d1 <read_line+0x81>

  401863:	48 8b 05 a6 3d 20 00 	mov    0x203da6(%rip),%rax        # 605610 <stdin@@GLIBC_2.2.5>
  40186a:	48 39 05 bf 3d 20 00 	cmp    %rax,0x203dbf(%rip)        # 605630 <infile>
  401871:	75 14                	jne    401887 <read_line+0x37>

  401873:	bf 3e 2c 40 00       	mov    $0x402c3e,%edi
  401878:	e8 63 f3 ff ff       	callq  400be0 <puts@plt>
  40187d:	bf 08 00 00 00       	mov    $0x8,%edi
  401882:	e8 79 f4 ff ff       	callq  400d00 <exit@plt>
  401887:	bf 5c 2c 40 00       	mov    $0x402c5c,%edi
  40188c:	e8 0f f3 ff ff       	callq  400ba0 <getenv@plt>
  401891:	48 85 c0             	test   %rax,%rax
  401894:	74 0a                	je     4018a0 <read_line+0x50>

  401896:	bf 00 00 00 00       	mov    $0x0,%edi
  40189b:	e8 60 f4 ff ff       	callq  400d00 <exit@plt>
  4018a0:	48 8b 05 69 3d 20 00 	mov    0x203d69(%rip),%rax        # 605610 <stdin@@GLIBC_2.2.5>
  4018a7:	48 89 05 82 3d 20 00 	mov    %rax,0x203d82(%rip)        # 605630 <infile>
  4018ae:	b8 00 00 00 00       	mov    $0x0,%eax
  4018b3:	e8 c7 fd ff ff       	callq  40167f <skip>
  4018b8:	48 85 c0             	test   %rax,%rax
  4018bb:	75 14                	jne    4018d1 <read_line+0x81>
  4018bd:	bf 3e 2c 40 00       	mov    $0x402c3e,%edi
  4018c2:	e8 19 f3 ff ff       	callq  400be0 <puts@plt>
  4018c7:	bf 00 00 00 00       	mov    $0x0,%edi
  4018cc:	e8 2f f4 ff ff       	callq  400d00 <exit@plt>
  4018d1:	44 8b 05 54 3d 20 00 	mov    0x203d54(%rip),%r8d        # 60562c <num_input_strings>
  4018d8:	49 63 c0             	movslq %r8d,%rax
  4018db:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4018df:	48 c1 e0 04          	shl    $0x4,%rax
  4018e3:	48 89 c2             	mov    %rax,%rdx
  4018e6:	48 81 c2 40 56 60 00 	add    $0x605640,%rdx
  4018ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4018f2:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4018f9:	48 89 d7             	mov    %rdx,%rdi
  4018fc:	f2 ae                	repnz scas %es:(%rdi),%al
  4018fe:	48 f7 d1             	not    %rcx
  401901:	48 83 e9 01          	sub    $0x1,%rcx
  401905:	83 f9 4e             	cmp    $0x4e,%ecx
  401908:	7e 46                	jle    401950 <read_line+0x100>
  40190a:	bf 67 2c 40 00       	mov    $0x402c67,%edi
  40190f:	e8 cc f2 ff ff       	callq  400be0 <puts@plt>
  401914:	8b 05 12 3d 20 00    	mov    0x203d12(%rip),%eax        # 60562c <num_input_strings>
  40191a:	8d 50 01             	lea    0x1(%rax),%edx
  40191d:	89 15 09 3d 20 00    	mov    %edx,0x203d09(%rip)        # 60562c <num_input_strings>
  401923:	48 98                	cltq   
  401925:	48 6b c0 50          	imul   $0x50,%rax,%rax
  401929:	48 bf 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rdi
  401930:	75 6e 63 
  401933:	48 89 b8 40 56 60 00 	mov    %rdi,0x605640(%rax)
  40193a:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  401941:	2a 2a 00 
  401944:	48 89 b8 48 56 60 00 	mov    %rdi,0x605648(%rax)
  40194b:	e8 8b fe ff ff       	callq  4017db <explode_bomb>
  401950:	83 e9 01             	sub    $0x1,%ecx
  401953:	48 63 c9             	movslq %ecx,%rcx
  401956:	49 63 c0             	movslq %r8d,%rax
  401959:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
  40195d:	48 89 f0             	mov    %rsi,%rax
  401960:	48 c1 e0 04          	shl    $0x4,%rax
  401964:	c6 84 01 40 56 60 00 	movb   $0x0,0x605640(%rcx,%rax,1)
  40196b:	00 
  40196c:	41 8d 40 01          	lea    0x1(%r8),%eax
  401970:	89 05 b6 3c 20 00    	mov    %eax,0x203cb6(%rip)        # 60562c <num_input_strings>
  401976:	48 89 d0             	mov    %rdx,%rax
  401979:	48 83 c4 08          	add    $0x8,%rsp
  40197d:	c3                   	retq   

000000000040197e <phase_defused>:
  40197e:	48 83 ec 78          	sub    $0x78,%rsp
  401982:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401989:	00 00 
  40198b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  401990:	31 c0                	xor    %eax,%eax
  401992:	bf 01 00 00 00       	mov    $0x1,%edi
  401997:	e8 27 fd ff ff       	callq  4016c3 <send_msg>
  40199c:	83 3d 89 3c 20 00 06 	cmpl   $0x6,0x203c89(%rip)        # 60562c <num_input_strings>
  4019a3:	75 6d                	jne    401a12 <phase_defused+0x94>

  4019a5:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  4019aa:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  4019af:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  4019b4:	be 82 2c 40 00       	mov    $0x402c82,%esi
  4019b9:	bf 30 57 60 00       	mov    $0x605730,%edi
  4019be:	b8 00 00 00 00       	mov    $0x0,%eax
  4019c3:	e8 f8 f2 ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  4019c8:	83 f8 03             	cmp    $0x3,%eax
  4019cb:	75 31                	jne    4019fe <phase_defused+0x80>

  4019cd:	be 8b 2c 40 00       	mov    $0x402c8b,%esi
  4019d2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4019d7:	e8 2c fb ff ff       	callq  401508 <strings_not_equal>
  4019dc:	85 c0                	test   %eax,%eax
  4019de:	75 1e                	jne    4019fe <phase_defused+0x80>

  4019e0:	bf e0 2a 40 00       	mov    $0x402ae0,%edi
  4019e5:	e8 f6 f1 ff ff       	callq  400be0 <puts@plt>
  4019ea:	bf 08 2b 40 00       	mov    $0x402b08,%edi
  4019ef:	e8 ec f1 ff ff       	callq  400be0 <puts@plt>
  4019f4:	b8 00 00 00 00       	mov    $0x0,%eax
  4019f9:	e8 29 fa ff ff       	callq  401427 <secret_phase>
  4019fe:	bf 40 2b 40 00       	mov    $0x402b40,%edi
  401a03:	e8 d8 f1 ff ff       	callq  400be0 <puts@plt>
  401a08:	bf 70 2b 40 00       	mov    $0x402b70,%edi
  401a0d:	e8 ce f1 ff ff       	callq  400be0 <puts@plt>
  401a12:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  401a17:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401a1e:	00 00 
  401a20:	74 05                	je     401a27 <phase_defused+0xa9>
  401a22:	e8 d9 f1 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  401a27:	48 83 c4 78          	add    $0x78,%rsp
  401a2b:	c3                   	retq   

0000000000401a2c <rio_readinitb>:
  401a2c:	89 37                	mov    %esi,(%rdi)
  401a2e:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  401a35:	48 8d 47 10          	lea    0x10(%rdi),%rax
  401a39:	48 89 47 08          	mov    %rax,0x8(%rdi)
  401a3d:	c3                   	retq   

0000000000401a3e <sigalrm_handler>:
  401a3e:	48 83 ec 08          	sub    $0x8,%rsp
  401a42:	b9 00 00 00 00       	mov    $0x0,%ecx
  401a47:	ba 58 2d 40 00       	mov    $0x402d58,%edx
  401a4c:	be 01 00 00 00       	mov    $0x1,%esi
  401a51:	48 8b 3d c8 3b 20 00 	mov    0x203bc8(%rip),%rdi        # 605620 <stderr@@GLIBC_2.2.5>
  401a58:	b8 00 00 00 00       	mov    $0x0,%eax
  401a5d:	e8 be f2 ff ff       	callq  400d20 <__fprintf_chk@plt>
  401a62:	bf 01 00 00 00       	mov    $0x1,%edi
  401a67:	e8 94 f2 ff ff       	callq  400d00 <exit@plt>

0000000000401a6c <rio_writen>:
  401a6c:	41 55                	push   %r13
  401a6e:	41 54                	push   %r12
  401a70:	55                   	push   %rbp
  401a71:	53                   	push   %rbx
  401a72:	48 83 ec 08          	sub    $0x8,%rsp
  401a76:	41 89 fc             	mov    %edi,%r12d
  401a79:	48 89 f5             	mov    %rsi,%rbp
  401a7c:	49 89 d5             	mov    %rdx,%r13
  401a7f:	48 89 d3             	mov    %rdx,%rbx
  401a82:	eb 28                	jmp    401aac <rio_writen+0x40>
  401a84:	48 89 da             	mov    %rbx,%rdx
  401a87:	48 89 ee             	mov    %rbp,%rsi
  401a8a:	44 89 e7             	mov    %r12d,%edi
  401a8d:	e8 5e f1 ff ff       	callq  400bf0 <write@plt>
  401a92:	48 85 c0             	test   %rax,%rax
  401a95:	7f 0f                	jg     401aa6 <rio_writen+0x3a>
  401a97:	e8 24 f1 ff ff       	callq  400bc0 <__errno_location@plt>
  401a9c:	83 38 04             	cmpl   $0x4,(%rax)
  401a9f:	75 15                	jne    401ab6 <rio_writen+0x4a>
  401aa1:	b8 00 00 00 00       	mov    $0x0,%eax
  401aa6:	48 29 c3             	sub    %rax,%rbx
  401aa9:	48 01 c5             	add    %rax,%rbp
  401aac:	48 85 db             	test   %rbx,%rbx
  401aaf:	75 d3                	jne    401a84 <rio_writen+0x18>
  401ab1:	4c 89 e8             	mov    %r13,%rax
  401ab4:	eb 07                	jmp    401abd <rio_writen+0x51>
  401ab6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401abd:	48 83 c4 08          	add    $0x8,%rsp
  401ac1:	5b                   	pop    %rbx
  401ac2:	5d                   	pop    %rbp
  401ac3:	41 5c                	pop    %r12
  401ac5:	41 5d                	pop    %r13
  401ac7:	c3                   	retq   

0000000000401ac8 <rio_read>:
  401ac8:	41 55                	push   %r13
  401aca:	41 54                	push   %r12
  401acc:	55                   	push   %rbp
  401acd:	53                   	push   %rbx
  401ace:	48 83 ec 08          	sub    $0x8,%rsp
  401ad2:	48 89 fb             	mov    %rdi,%rbx
  401ad5:	49 89 f5             	mov    %rsi,%r13
  401ad8:	49 89 d4             	mov    %rdx,%r12
  401adb:	eb 2e                	jmp    401b0b <rio_read+0x43>
  401add:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
  401ae1:	8b 3b                	mov    (%rbx),%edi
  401ae3:	ba 00 20 00 00       	mov    $0x2000,%edx
  401ae8:	48 89 ee             	mov    %rbp,%rsi
  401aeb:	e8 40 f1 ff ff       	callq  400c30 <read@plt>
  401af0:	89 43 04             	mov    %eax,0x4(%rbx)
  401af3:	85 c0                	test   %eax,%eax
  401af5:	79 0c                	jns    401b03 <rio_read+0x3b>
  401af7:	e8 c4 f0 ff ff       	callq  400bc0 <__errno_location@plt>
  401afc:	83 38 04             	cmpl   $0x4,(%rax)
  401aff:	74 0a                	je     401b0b <rio_read+0x43>
  401b01:	eb 37                	jmp    401b3a <rio_read+0x72>
  401b03:	85 c0                	test   %eax,%eax
  401b05:	74 3c                	je     401b43 <rio_read+0x7b>
  401b07:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  401b0b:	8b 6b 04             	mov    0x4(%rbx),%ebp
  401b0e:	85 ed                	test   %ebp,%ebp
  401b10:	7e cb                	jle    401add <rio_read+0x15>
  401b12:	89 e8                	mov    %ebp,%eax
  401b14:	49 39 c4             	cmp    %rax,%r12
  401b17:	77 03                	ja     401b1c <rio_read+0x54>
  401b19:	44 89 e5             	mov    %r12d,%ebp
  401b1c:	4c 63 e5             	movslq %ebp,%r12
  401b1f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  401b23:	4c 89 e2             	mov    %r12,%rdx
  401b26:	4c 89 ef             	mov    %r13,%rdi
  401b29:	e8 72 f1 ff ff       	callq  400ca0 <memcpy@plt>
  401b2e:	4c 01 63 08          	add    %r12,0x8(%rbx)
  401b32:	29 6b 04             	sub    %ebp,0x4(%rbx)
  401b35:	4c 89 e0             	mov    %r12,%rax
  401b38:	eb 0e                	jmp    401b48 <rio_read+0x80>
  401b3a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401b41:	eb 05                	jmp    401b48 <rio_read+0x80>
  401b43:	b8 00 00 00 00       	mov    $0x0,%eax
  401b48:	48 83 c4 08          	add    $0x8,%rsp
  401b4c:	5b                   	pop    %rbx
  401b4d:	5d                   	pop    %rbp
  401b4e:	41 5c                	pop    %r12
  401b50:	41 5d                	pop    %r13
  401b52:	c3                   	retq   

0000000000401b53 <rio_readlineb>:
  401b53:	41 55                	push   %r13
  401b55:	41 54                	push   %r12
  401b57:	55                   	push   %rbp
  401b58:	53                   	push   %rbx
  401b59:	48 83 ec 18          	sub    $0x18,%rsp
  401b5d:	49 89 fd             	mov    %rdi,%r13
  401b60:	48 89 f5             	mov    %rsi,%rbp
  401b63:	49 89 d4             	mov    %rdx,%r12
  401b66:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401b6d:	00 00 
  401b6f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401b74:	31 c0                	xor    %eax,%eax
  401b76:	bb 01 00 00 00       	mov    $0x1,%ebx
  401b7b:	eb 3f                	jmp    401bbc <rio_readlineb+0x69>
  401b7d:	ba 01 00 00 00       	mov    $0x1,%edx
  401b82:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
  401b87:	4c 89 ef             	mov    %r13,%rdi
  401b8a:	e8 39 ff ff ff       	callq  401ac8 <rio_read>
  401b8f:	83 f8 01             	cmp    $0x1,%eax
  401b92:	75 15                	jne    401ba9 <rio_readlineb+0x56>
  401b94:	48 8d 45 01          	lea    0x1(%rbp),%rax
  401b98:	0f b6 54 24 07       	movzbl 0x7(%rsp),%edx
  401b9d:	88 55 00             	mov    %dl,0x0(%rbp)
  401ba0:	80 7c 24 07 0a       	cmpb   $0xa,0x7(%rsp)
  401ba5:	75 0e                	jne    401bb5 <rio_readlineb+0x62>
  401ba7:	eb 1a                	jmp    401bc3 <rio_readlineb+0x70>
  401ba9:	85 c0                	test   %eax,%eax
  401bab:	75 22                	jne    401bcf <rio_readlineb+0x7c>
  401bad:	48 83 fb 01          	cmp    $0x1,%rbx
  401bb1:	75 13                	jne    401bc6 <rio_readlineb+0x73>
  401bb3:	eb 23                	jmp    401bd8 <rio_readlineb+0x85>
  401bb5:	48 83 c3 01          	add    $0x1,%rbx
  401bb9:	48 89 c5             	mov    %rax,%rbp
  401bbc:	4c 39 e3             	cmp    %r12,%rbx
  401bbf:	72 bc                	jb     401b7d <rio_readlineb+0x2a>
  401bc1:	eb 03                	jmp    401bc6 <rio_readlineb+0x73>
  401bc3:	48 89 c5             	mov    %rax,%rbp
  401bc6:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
  401bca:	48 89 d8             	mov    %rbx,%rax
  401bcd:	eb 0e                	jmp    401bdd <rio_readlineb+0x8a>
  401bcf:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401bd6:	eb 05                	jmp    401bdd <rio_readlineb+0x8a>
  401bd8:	b8 00 00 00 00       	mov    $0x0,%eax
  401bdd:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  401be2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401be9:	00 00 
  401beb:	74 05                	je     401bf2 <rio_readlineb+0x9f>
  401bed:	e8 0e f0 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  401bf2:	48 83 c4 18          	add    $0x18,%rsp
  401bf6:	5b                   	pop    %rbx
  401bf7:	5d                   	pop    %rbp
  401bf8:	41 5c                	pop    %r12
  401bfa:	41 5d                	pop    %r13
  401bfc:	c3                   	retq   

0000000000401bfd <urlencode>:
  401bfd:	41 54                	push   %r12
  401bff:	55                   	push   %rbp
  401c00:	53                   	push   %rbx
  401c01:	48 83 ec 10          	sub    $0x10,%rsp
  401c05:	48 89 fb             	mov    %rdi,%rbx
  401c08:	48 89 f5             	mov    %rsi,%rbp
  401c0b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401c12:	00 00 
  401c14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401c19:	31 c0                	xor    %eax,%eax
  401c1b:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401c22:	f2 ae                	repnz scas %es:(%rdi),%al
  401c24:	48 f7 d1             	not    %rcx
  401c27:	8d 41 ff             	lea    -0x1(%rcx),%eax
  401c2a:	e9 aa 00 00 00       	jmpq   401cd9 <urlencode+0xdc>
  401c2f:	44 0f b6 03          	movzbl (%rbx),%r8d
  401c33:	41 80 f8 2a          	cmp    $0x2a,%r8b
  401c37:	0f 94 c2             	sete   %dl
  401c3a:	41 80 f8 2d          	cmp    $0x2d,%r8b
  401c3e:	0f 94 c0             	sete   %al
  401c41:	08 c2                	or     %al,%dl
  401c43:	75 24                	jne    401c69 <urlencode+0x6c>
  401c45:	41 80 f8 2e          	cmp    $0x2e,%r8b
  401c49:	74 1e                	je     401c69 <urlencode+0x6c>
  401c4b:	41 80 f8 5f          	cmp    $0x5f,%r8b
  401c4f:	74 18                	je     401c69 <urlencode+0x6c>
  401c51:	41 8d 40 d0          	lea    -0x30(%r8),%eax
  401c55:	3c 09                	cmp    $0x9,%al
  401c57:	76 10                	jbe    401c69 <urlencode+0x6c>
  401c59:	41 8d 40 bf          	lea    -0x41(%r8),%eax
  401c5d:	3c 19                	cmp    $0x19,%al
  401c5f:	76 08                	jbe    401c69 <urlencode+0x6c>
  401c61:	41 8d 40 9f          	lea    -0x61(%r8),%eax
  401c65:	3c 19                	cmp    $0x19,%al
  401c67:	77 0a                	ja     401c73 <urlencode+0x76>
  401c69:	44 88 45 00          	mov    %r8b,0x0(%rbp)
  401c6d:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401c71:	eb 5f                	jmp    401cd2 <urlencode+0xd5>
  401c73:	41 80 f8 20          	cmp    $0x20,%r8b
  401c77:	75 0a                	jne    401c83 <urlencode+0x86>
  401c79:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  401c7d:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401c81:	eb 4f                	jmp    401cd2 <urlencode+0xd5>
  401c83:	41 8d 40 e0          	lea    -0x20(%r8),%eax
  401c87:	3c 5f                	cmp    $0x5f,%al
  401c89:	0f 96 c2             	setbe  %dl
  401c8c:	41 80 f8 09          	cmp    $0x9,%r8b
  401c90:	0f 94 c0             	sete   %al
  401c93:	08 c2                	or     %al,%dl
  401c95:	74 50                	je     401ce7 <urlencode+0xea>
  401c97:	45 0f b6 c0          	movzbl %r8b,%r8d
  401c9b:	b9 10 2e 40 00       	mov    $0x402e10,%ecx
  401ca0:	ba 08 00 00 00       	mov    $0x8,%edx
  401ca5:	be 01 00 00 00       	mov    $0x1,%esi
  401caa:	48 89 e7             	mov    %rsp,%rdi
  401cad:	b8 00 00 00 00       	mov    $0x0,%eax
  401cb2:	e8 99 f0 ff ff       	callq  400d50 <__sprintf_chk@plt>
  401cb7:	0f b6 04 24          	movzbl (%rsp),%eax
  401cbb:	88 45 00             	mov    %al,0x0(%rbp)
  401cbe:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
  401cc3:	88 45 01             	mov    %al,0x1(%rbp)
  401cc6:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
  401ccb:	88 45 02             	mov    %al,0x2(%rbp)
  401cce:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
  401cd2:	48 83 c3 01          	add    $0x1,%rbx
  401cd6:	44 89 e0             	mov    %r12d,%eax
  401cd9:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
  401cdd:	85 c0                	test   %eax,%eax
  401cdf:	0f 85 4a ff ff ff    	jne    401c2f <urlencode+0x32>
  401ce5:	eb 05                	jmp    401cec <urlencode+0xef>
  401ce7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401cec:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  401cf1:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
  401cf8:	00 00 
  401cfa:	74 05                	je     401d01 <urlencode+0x104>
  401cfc:	e8 ff ee ff ff       	callq  400c00 <__stack_chk_fail@plt>
  401d01:	48 83 c4 10          	add    $0x10,%rsp
  401d05:	5b                   	pop    %rbx
  401d06:	5d                   	pop    %rbp
  401d07:	41 5c                	pop    %r12
  401d09:	c3                   	retq   

0000000000401d0a <submitr>:
  401d0a:	41 57                	push   %r15
  401d0c:	41 56                	push   %r14
  401d0e:	41 55                	push   %r13
  401d10:	41 54                	push   %r12
  401d12:	55                   	push   %rbp
  401d13:	53                   	push   %rbx
  401d14:	48 81 ec 58 a0 00 00 	sub    $0xa058,%rsp
  401d1b:	49 89 fd             	mov    %rdi,%r13
  401d1e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
  401d22:	48 89 14 24          	mov    %rdx,(%rsp)
  401d26:	49 89 ce             	mov    %rcx,%r14
  401d29:	4d 89 c7             	mov    %r8,%r15
  401d2c:	4d 89 cc             	mov    %r9,%r12
  401d2f:	48 8b 9c 24 90 a0 00 	mov    0xa090(%rsp),%rbx
  401d36:	00 
  401d37:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401d3e:	00 00 
  401d40:	48 89 84 24 48 a0 00 	mov    %rax,0xa048(%rsp)
  401d47:	00 
  401d48:	31 c0                	xor    %eax,%eax
  401d4a:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
  401d51:	00 
  401d52:	ba 00 00 00 00       	mov    $0x0,%edx
  401d57:	be 01 00 00 00       	mov    $0x1,%esi
  401d5c:	bf 02 00 00 00       	mov    $0x2,%edi
  401d61:	e8 fa ef ff ff       	callq  400d60 <socket@plt>
  401d66:	85 c0                	test   %eax,%eax
  401d68:	79 4e                	jns    401db8 <submitr+0xae>
  401d6a:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401d71:	3a 20 43 
  401d74:	48 89 03             	mov    %rax,(%rbx)
  401d77:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401d7e:	20 75 6e 
  401d81:	48 89 43 08          	mov    %rax,0x8(%rbx)
  401d85:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401d8c:	74 6f 20 
  401d8f:	48 89 43 10          	mov    %rax,0x10(%rbx)
  401d93:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  401d9a:	65 20 73 
  401d9d:	48 89 43 18          	mov    %rax,0x18(%rbx)
  401da1:	c7 43 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbx)
  401da8:	66 c7 43 24 74 00    	movw   $0x74,0x24(%rbx)
  401dae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401db3:	e9 b3 06 00 00       	jmpq   40246b <submitr+0x761>
  401db8:	89 c5                	mov    %eax,%ebp
  401dba:	4c 89 ef             	mov    %r13,%rdi
  401dbd:	e8 ae ee ff ff       	callq  400c70 <gethostbyname@plt>
  401dc2:	48 85 c0             	test   %rax,%rax
  401dc5:	75 75                	jne    401e3c <submitr+0x132>
  401dc7:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  401dce:	3a 20 44 
  401dd1:	48 89 03             	mov    %rax,(%rbx)
  401dd4:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  401ddb:	20 75 6e 
  401dde:	48 89 43 08          	mov    %rax,0x8(%rbx)
  401de2:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401de9:	74 6f 20 
  401dec:	48 89 43 10          	mov    %rax,0x10(%rbx)
  401df0:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  401df7:	76 65 20 
  401dfa:	48 89 43 18          	mov    %rax,0x18(%rbx)
  401dfe:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
  401e05:	61 62 20 
  401e08:	48 89 43 20          	mov    %rax,0x20(%rbx)
  401e0c:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  401e13:	72 20 61 
  401e16:	48 89 43 28          	mov    %rax,0x28(%rbx)
  401e1a:	c7 43 30 64 64 72 65 	movl   $0x65726464,0x30(%rbx)
  401e21:	66 c7 43 34 73 73    	movw   $0x7373,0x34(%rbx)
  401e27:	c6 43 36 00          	movb   $0x0,0x36(%rbx)
  401e2b:	89 ef                	mov    %ebp,%edi
  401e2d:	e8 ee ed ff ff       	callq  400c20 <close@plt>
  401e32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401e37:	e9 2f 06 00 00       	jmpq   40246b <submitr+0x761>
  401e3c:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  401e43:	00 00 
  401e45:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
  401e4c:	00 00 
  401e4e:	66 c7 44 24 20 02 00 	movw   $0x2,0x20(%rsp)
  401e55:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401e59:	48 8b 40 18          	mov    0x18(%rax),%rax
  401e5d:	48 8b 30             	mov    (%rax),%rsi
  401e60:	48 8d 7c 24 24       	lea    0x24(%rsp),%rdi
  401e65:	b9 0c 00 00 00       	mov    $0xc,%ecx
  401e6a:	e8 11 ee ff ff       	callq  400c80 <__memmove_chk@plt>
  401e6f:	0f b7 44 24 0c       	movzwl 0xc(%rsp),%eax
  401e74:	66 c1 c8 08          	ror    $0x8,%ax
  401e78:	66 89 44 24 22       	mov    %ax,0x22(%rsp)
  401e7d:	ba 10 00 00 00       	mov    $0x10,%edx
  401e82:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  401e87:	89 ef                	mov    %ebp,%edi
  401e89:	e8 82 ee ff ff       	callq  400d10 <connect@plt>
  401e8e:	85 c0                	test   %eax,%eax
  401e90:	79 67                	jns    401ef9 <submitr+0x1ef>
  401e92:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  401e99:	3a 20 55 
  401e9c:	48 89 03             	mov    %rax,(%rbx)
  401e9f:	48 b8 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rax
  401ea6:	20 74 6f 
  401ea9:	48 89 43 08          	mov    %rax,0x8(%rbx)
  401ead:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  401eb4:	65 63 74 
  401eb7:	48 89 43 10          	mov    %rax,0x10(%rbx)
  401ebb:	48 b8 20 74 6f 20 74 	movabs $0x20656874206f7420,%rax
  401ec2:	68 65 20 
  401ec5:	48 89 43 18          	mov    %rax,0x18(%rbx)
  401ec9:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
  401ed0:	61 62 20 
  401ed3:	48 89 43 20          	mov    %rax,0x20(%rbx)
  401ed7:	c7 43 28 73 65 72 76 	movl   $0x76726573,0x28(%rbx)
  401ede:	66 c7 43 2c 65 72    	movw   $0x7265,0x2c(%rbx)
  401ee4:	c6 43 2e 00          	movb   $0x0,0x2e(%rbx)
  401ee8:	89 ef                	mov    %ebp,%edi
  401eea:	e8 31 ed ff ff       	callq  400c20 <close@plt>
  401eef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ef4:	e9 72 05 00 00       	jmpq   40246b <submitr+0x761>
  401ef9:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
  401f00:	b8 00 00 00 00       	mov    $0x0,%eax
  401f05:	48 89 f1             	mov    %rsi,%rcx
  401f08:	4c 89 e7             	mov    %r12,%rdi
  401f0b:	f2 ae                	repnz scas %es:(%rdi),%al
  401f0d:	48 f7 d1             	not    %rcx
  401f10:	48 89 ca             	mov    %rcx,%rdx
  401f13:	48 89 f1             	mov    %rsi,%rcx
  401f16:	48 8b 3c 24          	mov    (%rsp),%rdi
  401f1a:	f2 ae                	repnz scas %es:(%rdi),%al
  401f1c:	48 f7 d1             	not    %rcx
  401f1f:	49 89 c8             	mov    %rcx,%r8
  401f22:	48 89 f1             	mov    %rsi,%rcx
  401f25:	4c 89 f7             	mov    %r14,%rdi
  401f28:	f2 ae                	repnz scas %es:(%rdi),%al
  401f2a:	48 f7 d1             	not    %rcx
  401f2d:	4d 8d 44 08 fe       	lea    -0x2(%r8,%rcx,1),%r8
  401f32:	48 89 f1             	mov    %rsi,%rcx
  401f35:	4c 89 ff             	mov    %r15,%rdi
  401f38:	f2 ae                	repnz scas %es:(%rdi),%al
  401f3a:	48 89 c8             	mov    %rcx,%rax
  401f3d:	48 f7 d0             	not    %rax
  401f40:	49 8d 4c 00 ff       	lea    -0x1(%r8,%rax,1),%rcx
  401f45:	48 8d 44 52 fd       	lea    -0x3(%rdx,%rdx,2),%rax
  401f4a:	48 8d 84 01 80 00 00 	lea    0x80(%rcx,%rax,1),%rax
  401f51:	00 
  401f52:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401f58:	76 72                	jbe    401fcc <submitr+0x2c2>
  401f5a:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401f61:	3a 20 52 
  401f64:	48 89 03             	mov    %rax,(%rbx)
  401f67:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  401f6e:	20 73 74 
  401f71:	48 89 43 08          	mov    %rax,0x8(%rbx)
  401f75:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  401f7c:	74 6f 6f 
  401f7f:	48 89 43 10          	mov    %rax,0x10(%rbx)
  401f83:	48 b8 20 6c 61 72 67 	movabs $0x202e656772616c20,%rax
  401f8a:	65 2e 20 
  401f8d:	48 89 43 18          	mov    %rax,0x18(%rbx)
  401f91:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  401f98:	61 73 65 
  401f9b:	48 89 43 20          	mov    %rax,0x20(%rbx)
  401f9f:	48 b8 20 53 55 42 4d 	movabs $0x5254494d42555320,%rax
  401fa6:	49 54 52 
  401fa9:	48 89 43 28          	mov    %rax,0x28(%rbx)
  401fad:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  401fb4:	55 46 00 
  401fb7:	48 89 43 30          	mov    %rax,0x30(%rbx)
  401fbb:	89 ef                	mov    %ebp,%edi
  401fbd:	e8 5e ec ff ff       	callq  400c20 <close@plt>
  401fc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401fc7:	e9 9f 04 00 00       	jmpq   40246b <submitr+0x761>
  401fcc:	48 8d b4 24 40 40 00 	lea    0x4040(%rsp),%rsi
  401fd3:	00 
  401fd4:	b9 00 04 00 00       	mov    $0x400,%ecx
  401fd9:	b8 00 00 00 00       	mov    $0x0,%eax
  401fde:	48 89 f7             	mov    %rsi,%rdi
  401fe1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401fe4:	4c 89 e7             	mov    %r12,%rdi
  401fe7:	e8 11 fc ff ff       	callq  401bfd <urlencode>
  401fec:	85 c0                	test   %eax,%eax
  401fee:	0f 89 8a 00 00 00    	jns    40207e <submitr+0x374>
  401ff4:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401ffb:	3a 20 52 
  401ffe:	48 89 03             	mov    %rax,(%rbx)
  402001:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  402008:	20 73 74 
  40200b:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40200f:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  402016:	63 6f 6e 
  402019:	48 89 43 10          	mov    %rax,0x10(%rbx)
  40201d:	48 b8 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rax
  402024:	20 61 6e 
  402027:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40202b:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  402032:	67 61 6c 
  402035:	48 89 43 20          	mov    %rax,0x20(%rbx)
  402039:	48 b8 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rax
  402040:	6e 70 72 
  402043:	48 89 43 28          	mov    %rax,0x28(%rbx)
  402047:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  40204e:	6c 65 20 
  402051:	48 89 43 30          	mov    %rax,0x30(%rbx)
  402055:	48 b8 63 68 61 72 61 	movabs $0x6574636172616863,%rax
  40205c:	63 74 65 
  40205f:	48 89 43 38          	mov    %rax,0x38(%rbx)
  402063:	66 c7 43 40 72 2e    	movw   $0x2e72,0x40(%rbx)
  402069:	c6 43 42 00          	movb   $0x0,0x42(%rbx)
  40206d:	89 ef                	mov    %ebp,%edi
  40206f:	e8 ac eb ff ff       	callq  400c20 <close@plt>
  402074:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402079:	e9 ed 03 00 00       	jmpq   40246b <submitr+0x761>
  40207e:	4c 8d a4 24 40 20 00 	lea    0x2040(%rsp),%r12
  402085:	00 
  402086:	48 83 ec 08          	sub    $0x8,%rsp
  40208a:	41 55                	push   %r13
  40208c:	48 8d 84 24 50 40 00 	lea    0x4050(%rsp),%rax
  402093:	00 
  402094:	50                   	push   %rax
  402095:	41 56                	push   %r14
  402097:	4d 89 f9             	mov    %r15,%r9
  40209a:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  40209f:	b9 80 2d 40 00       	mov    $0x402d80,%ecx
  4020a4:	ba 00 20 00 00       	mov    $0x2000,%edx
  4020a9:	be 01 00 00 00       	mov    $0x1,%esi
  4020ae:	4c 89 e7             	mov    %r12,%rdi
  4020b1:	b8 00 00 00 00       	mov    $0x0,%eax
  4020b6:	e8 95 ec ff ff       	callq  400d50 <__sprintf_chk@plt>
  4020bb:	b8 00 00 00 00       	mov    $0x0,%eax
  4020c0:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4020c7:	4c 89 e7             	mov    %r12,%rdi
  4020ca:	f2 ae                	repnz scas %es:(%rdi),%al
  4020cc:	48 f7 d1             	not    %rcx
  4020cf:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
  4020d3:	48 83 c4 20          	add    $0x20,%rsp
  4020d7:	4c 89 e6             	mov    %r12,%rsi
  4020da:	89 ef                	mov    %ebp,%edi
  4020dc:	e8 8b f9 ff ff       	callq  401a6c <rio_writen>
  4020e1:	48 85 c0             	test   %rax,%rax
  4020e4:	79 6b                	jns    402151 <submitr+0x447>
  4020e6:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  4020ed:	3a 20 43 
  4020f0:	48 89 03             	mov    %rax,(%rbx)
  4020f3:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  4020fa:	20 75 6e 
  4020fd:	48 89 43 08          	mov    %rax,0x8(%rbx)
  402101:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402108:	74 6f 20 
  40210b:	48 89 43 10          	mov    %rax,0x10(%rbx)
  40210f:	48 b8 77 72 69 74 65 	movabs $0x6f74206574697277,%rax
  402116:	20 74 6f 
  402119:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40211d:	48 b8 20 74 68 65 20 	movabs $0x7475412065687420,%rax
  402124:	41 75 74 
  402127:	48 89 43 20          	mov    %rax,0x20(%rbx)
  40212b:	48 b8 6f 6c 61 62 20 	movabs $0x7265732062616c6f,%rax
  402132:	73 65 72 
  402135:	48 89 43 28          	mov    %rax,0x28(%rbx)
  402139:	c7 43 30 76 65 72 00 	movl   $0x726576,0x30(%rbx)
  402140:	89 ef                	mov    %ebp,%edi
  402142:	e8 d9 ea ff ff       	callq  400c20 <close@plt>
  402147:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40214c:	e9 1a 03 00 00       	jmpq   40246b <submitr+0x761>
  402151:	89 ee                	mov    %ebp,%esi
  402153:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  402158:	e8 cf f8 ff ff       	callq  401a2c <rio_readinitb>
  40215d:	ba 00 20 00 00       	mov    $0x2000,%edx
  402162:	48 8d b4 24 40 20 00 	lea    0x2040(%rsp),%rsi
  402169:	00 
  40216a:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  40216f:	e8 df f9 ff ff       	callq  401b53 <rio_readlineb>
  402174:	48 85 c0             	test   %rax,%rax
  402177:	7f 7f                	jg     4021f8 <submitr+0x4ee>
  402179:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402180:	3a 20 43 
  402183:	48 89 03             	mov    %rax,(%rbx)
  402186:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  40218d:	20 75 6e 
  402190:	48 89 43 08          	mov    %rax,0x8(%rbx)
  402194:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40219b:	74 6f 20 
  40219e:	48 89 43 10          	mov    %rax,0x10(%rbx)
  4021a2:	48 b8 72 65 61 64 20 	movabs $0x7269662064616572,%rax
  4021a9:	66 69 72 
  4021ac:	48 89 43 18          	mov    %rax,0x18(%rbx)
  4021b0:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  4021b7:	61 64 65 
  4021ba:	48 89 43 20          	mov    %rax,0x20(%rbx)
  4021be:	48 b8 72 20 66 72 6f 	movabs $0x41206d6f72662072,%rax
  4021c5:	6d 20 41 
  4021c8:	48 89 43 28          	mov    %rax,0x28(%rbx)
  4021cc:	48 b8 75 74 6f 6c 61 	movabs $0x732062616c6f7475,%rax
  4021d3:	62 20 73 
  4021d6:	48 89 43 30          	mov    %rax,0x30(%rbx)
  4021da:	c7 43 38 65 72 76 65 	movl   $0x65767265,0x38(%rbx)
  4021e1:	66 c7 43 3c 72 00    	movw   $0x72,0x3c(%rbx)
  4021e7:	89 ef                	mov    %ebp,%edi
  4021e9:	e8 32 ea ff ff       	callq  400c20 <close@plt>
  4021ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4021f3:	e9 73 02 00 00       	jmpq   40246b <submitr+0x761>
  4021f8:	4c 8d 84 24 40 80 00 	lea    0x8040(%rsp),%r8
  4021ff:	00 
  402200:	48 8d 4c 24 1c       	lea    0x1c(%rsp),%rcx
  402205:	48 8d 94 24 40 60 00 	lea    0x6040(%rsp),%rdx
  40220c:	00 
  40220d:	be 17 2e 40 00       	mov    $0x402e17,%esi
  402212:	48 8d bc 24 40 20 00 	lea    0x2040(%rsp),%rdi
  402219:	00 
  40221a:	b8 00 00 00 00       	mov    $0x0,%eax
  40221f:	e8 9c ea ff ff       	callq  400cc0 <__isoc99_sscanf@plt>
  402224:	e9 92 00 00 00       	jmpq   4022bb <submitr+0x5b1>
  402229:	ba 00 20 00 00       	mov    $0x2000,%edx
  40222e:	48 8d b4 24 40 20 00 	lea    0x2040(%rsp),%rsi
  402235:	00 
  402236:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  40223b:	e8 13 f9 ff ff       	callq  401b53 <rio_readlineb>
  402240:	48 85 c0             	test   %rax,%rax
  402243:	7f 76                	jg     4022bb <submitr+0x5b1>
  402245:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  40224c:	3a 20 43 
  40224f:	48 89 03             	mov    %rax,(%rbx)
  402252:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402259:	20 75 6e 
  40225c:	48 89 43 08          	mov    %rax,0x8(%rbx)
  402260:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402267:	74 6f 20 
  40226a:	48 89 43 10          	mov    %rax,0x10(%rbx)
  40226e:	48 b8 72 65 61 64 20 	movabs $0x6165682064616572,%rax
  402275:	68 65 61 
  402278:	48 89 43 18          	mov    %rax,0x18(%rbx)
  40227c:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  402283:	66 72 6f 
  402286:	48 89 43 20          	mov    %rax,0x20(%rbx)
  40228a:	48 b8 6d 20 41 75 74 	movabs $0x616c6f747541206d,%rax
  402291:	6f 6c 61 
  402294:	48 89 43 28          	mov    %rax,0x28(%rbx)
  402298:	48 b8 62 20 73 65 72 	movabs $0x7265767265732062,%rax
  40229f:	76 65 72 
  4022a2:	48 89 43 30          	mov    %rax,0x30(%rbx)
  4022a6:	c6 43 38 00          	movb   $0x0,0x38(%rbx)
  4022aa:	89 ef                	mov    %ebp,%edi
  4022ac:	e8 6f e9 ff ff       	callq  400c20 <close@plt>
  4022b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4022b6:	e9 b0 01 00 00       	jmpq   40246b <submitr+0x761>
  4022bb:	0f b6 94 24 40 20 00 	movzbl 0x2040(%rsp),%edx
  4022c2:	00 
  4022c3:	b8 0d 00 00 00       	mov    $0xd,%eax
  4022c8:	29 d0                	sub    %edx,%eax
  4022ca:	75 1b                	jne    4022e7 <submitr+0x5dd>
  4022cc:	0f b6 94 24 41 20 00 	movzbl 0x2041(%rsp),%edx
  4022d3:	00 
  4022d4:	b8 0a 00 00 00       	mov    $0xa,%eax
  4022d9:	29 d0                	sub    %edx,%eax
  4022db:	75 0a                	jne    4022e7 <submitr+0x5dd>
  4022dd:	0f b6 84 24 42 20 00 	movzbl 0x2042(%rsp),%eax
  4022e4:	00 
  4022e5:	f7 d8                	neg    %eax
  4022e7:	85 c0                	test   %eax,%eax
  4022e9:	0f 85 3a ff ff ff    	jne    402229 <submitr+0x51f>
  4022ef:	ba 00 20 00 00       	mov    $0x2000,%edx
  4022f4:	48 8d b4 24 40 20 00 	lea    0x2040(%rsp),%rsi
  4022fb:	00 
  4022fc:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
  402301:	e8 4d f8 ff ff       	callq  401b53 <rio_readlineb>
  402306:	48 85 c0             	test   %rax,%rax
  402309:	0f 8f 80 00 00 00    	jg     40238f <submitr+0x685>
  40230f:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402316:	3a 20 43 
  402319:	48 89 03             	mov    %rax,(%rbx)
  40231c:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402323:	20 75 6e 
  402326:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40232a:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402331:	74 6f 20 
  402334:	48 89 43 10          	mov    %rax,0x10(%rbx)
  402338:	48 b8 72 65 61 64 20 	movabs $0x6174732064616572,%rax
  40233f:	73 74 61 
  402342:	48 89 43 18          	mov    %rax,0x18(%rbx)
  402346:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  40234d:	65 73 73 
  402350:	48 89 43 20          	mov    %rax,0x20(%rbx)
  402354:	48 b8 61 67 65 20 66 	movabs $0x6d6f726620656761,%rax
  40235b:	72 6f 6d 
  40235e:	48 89 43 28          	mov    %rax,0x28(%rbx)
  402362:	48 b8 20 41 75 74 6f 	movabs $0x62616c6f74754120,%rax
  402369:	6c 61 62 
  40236c:	48 89 43 30          	mov    %rax,0x30(%rbx)
  402370:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  402377:	65 72 00 
  40237a:	48 89 43 38          	mov    %rax,0x38(%rbx)
  40237e:	89 ef                	mov    %ebp,%edi
  402380:	e8 9b e8 ff ff       	callq  400c20 <close@plt>
  402385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40238a:	e9 dc 00 00 00       	jmpq   40246b <submitr+0x761>
  40238f:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
  402394:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
  40239b:	74 37                	je     4023d4 <submitr+0x6ca>
  40239d:	4c 8d 8c 24 40 80 00 	lea    0x8040(%rsp),%r9
  4023a4:	00 
  4023a5:	b9 e0 2d 40 00       	mov    $0x402de0,%ecx
  4023aa:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4023b1:	be 01 00 00 00       	mov    $0x1,%esi
  4023b6:	48 89 df             	mov    %rbx,%rdi
  4023b9:	b8 00 00 00 00       	mov    $0x0,%eax
  4023be:	e8 8d e9 ff ff       	callq  400d50 <__sprintf_chk@plt>
  4023c3:	89 ef                	mov    %ebp,%edi
  4023c5:	e8 56 e8 ff ff       	callq  400c20 <close@plt>
  4023ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4023cf:	e9 97 00 00 00       	jmpq   40246b <submitr+0x761>
  4023d4:	48 8d b4 24 40 20 00 	lea    0x2040(%rsp),%rsi
  4023db:	00 
  4023dc:	48 89 df             	mov    %rbx,%rdi
  4023df:	e8 ec e7 ff ff       	callq  400bd0 <strcpy@plt>
  4023e4:	89 ef                	mov    %ebp,%edi
  4023e6:	e8 35 e8 ff ff       	callq  400c20 <close@plt>
  4023eb:	0f b6 03             	movzbl (%rbx),%eax
  4023ee:	ba 4f 00 00 00       	mov    $0x4f,%edx
  4023f3:	29 c2                	sub    %eax,%edx
  4023f5:	75 22                	jne    402419 <submitr+0x70f>
  4023f7:	0f b6 4b 01          	movzbl 0x1(%rbx),%ecx
  4023fb:	b8 4b 00 00 00       	mov    $0x4b,%eax
  402400:	29 c8                	sub    %ecx,%eax
  402402:	75 17                	jne    40241b <submitr+0x711>
  402404:	0f b6 4b 02          	movzbl 0x2(%rbx),%ecx
  402408:	b8 0a 00 00 00       	mov    $0xa,%eax
  40240d:	29 c8                	sub    %ecx,%eax
  40240f:	75 0a                	jne    40241b <submitr+0x711>
  402411:	0f b6 43 03          	movzbl 0x3(%rbx),%eax
  402415:	f7 d8                	neg    %eax
  402417:	eb 02                	jmp    40241b <submitr+0x711>
  402419:	89 d0                	mov    %edx,%eax
  40241b:	85 c0                	test   %eax,%eax
  40241d:	74 40                	je     40245f <submitr+0x755>
  40241f:	bf 28 2e 40 00       	mov    $0x402e28,%edi
  402424:	b9 05 00 00 00       	mov    $0x5,%ecx
  402429:	48 89 de             	mov    %rbx,%rsi
  40242c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  40242e:	0f 97 c0             	seta   %al
  402431:	0f 92 c1             	setb   %cl
  402434:	29 c8                	sub    %ecx,%eax
  402436:	0f be c0             	movsbl %al,%eax
  402439:	85 c0                	test   %eax,%eax
  40243b:	74 2e                	je     40246b <submitr+0x761>
  40243d:	85 d2                	test   %edx,%edx
  40243f:	75 13                	jne    402454 <submitr+0x74a>
  402441:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
  402445:	ba 4b 00 00 00       	mov    $0x4b,%edx
  40244a:	29 c2                	sub    %eax,%edx
  40244c:	75 06                	jne    402454 <submitr+0x74a>
  40244e:	0f b6 53 02          	movzbl 0x2(%rbx),%edx
  402452:	f7 da                	neg    %edx
  402454:	85 d2                	test   %edx,%edx
  402456:	75 0e                	jne    402466 <submitr+0x75c>
  402458:	b8 00 00 00 00       	mov    $0x0,%eax
  40245d:	eb 0c                	jmp    40246b <submitr+0x761>
  40245f:	b8 00 00 00 00       	mov    $0x0,%eax
  402464:	eb 05                	jmp    40246b <submitr+0x761>
  402466:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40246b:	48 8b 9c 24 48 a0 00 	mov    0xa048(%rsp),%rbx
  402472:	00 
  402473:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  40247a:	00 00 
  40247c:	74 05                	je     402483 <submitr+0x779>
  40247e:	e8 7d e7 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  402483:	48 81 c4 58 a0 00 00 	add    $0xa058,%rsp
  40248a:	5b                   	pop    %rbx
  40248b:	5d                   	pop    %rbp
  40248c:	41 5c                	pop    %r12
  40248e:	41 5d                	pop    %r13
  402490:	41 5e                	pop    %r14
  402492:	41 5f                	pop    %r15
  402494:	c3                   	retq   

0000000000402495 <init_timeout>:
  402495:	85 ff                	test   %edi,%edi
  402497:	74 23                	je     4024bc <init_timeout+0x27>
  402499:	53                   	push   %rbx
  40249a:	89 fb                	mov    %edi,%ebx
  40249c:	85 ff                	test   %edi,%edi
  40249e:	79 05                	jns    4024a5 <init_timeout+0x10>
  4024a0:	bb 00 00 00 00       	mov    $0x0,%ebx
  4024a5:	be 3e 1a 40 00       	mov    $0x401a3e,%esi
  4024aa:	bf 0e 00 00 00       	mov    $0xe,%edi
  4024af:	e8 ac e7 ff ff       	callq  400c60 <signal@plt>
  4024b4:	89 df                	mov    %ebx,%edi
  4024b6:	e8 55 e7 ff ff       	callq  400c10 <alarm@plt>
  4024bb:	5b                   	pop    %rbx
  4024bc:	f3 c3                	repz retq 

00000000004024be <init_driver>:
  4024be:	55                   	push   %rbp
  4024bf:	53                   	push   %rbx
  4024c0:	48 83 ec 28          	sub    $0x28,%rsp
  4024c4:	48 89 fd             	mov    %rdi,%rbp
  4024c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4024ce:	00 00 
  4024d0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4024d5:	31 c0                	xor    %eax,%eax
  4024d7:	be 01 00 00 00       	mov    $0x1,%esi
  4024dc:	bf 0d 00 00 00       	mov    $0xd,%edi
  4024e1:	e8 7a e7 ff ff       	callq  400c60 <signal@plt>
  4024e6:	be 01 00 00 00       	mov    $0x1,%esi
  4024eb:	bf 1d 00 00 00       	mov    $0x1d,%edi
  4024f0:	e8 6b e7 ff ff       	callq  400c60 <signal@plt>
  4024f5:	be 01 00 00 00       	mov    $0x1,%esi
  4024fa:	bf 1d 00 00 00       	mov    $0x1d,%edi
  4024ff:	e8 5c e7 ff ff       	callq  400c60 <signal@plt>
  402504:	ba 00 00 00 00       	mov    $0x0,%edx
  402509:	be 01 00 00 00       	mov    $0x1,%esi
  40250e:	bf 02 00 00 00       	mov    $0x2,%edi
  402513:	e8 48 e8 ff ff       	callq  400d60 <socket@plt>
  402518:	85 c0                	test   %eax,%eax
  40251a:	79 4f                	jns    40256b <init_driver+0xad>
  40251c:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402523:	3a 20 43 
  402526:	48 89 45 00          	mov    %rax,0x0(%rbp)
  40252a:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402531:	20 75 6e 
  402534:	48 89 45 08          	mov    %rax,0x8(%rbp)
  402538:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40253f:	74 6f 20 
  402542:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402546:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  40254d:	65 20 73 
  402550:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402554:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  40255b:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  402561:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402566:	e9 2a 01 00 00       	jmpq   402695 <init_driver+0x1d7>
  40256b:	89 c3                	mov    %eax,%ebx
  40256d:	bf 43 2d 40 00       	mov    $0x402d43,%edi
  402572:	e8 f9 e6 ff ff       	callq  400c70 <gethostbyname@plt>
  402577:	48 85 c0             	test   %rax,%rax
  40257a:	75 68                	jne    4025e4 <init_driver+0x126>
  40257c:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  402583:	3a 20 44 
  402586:	48 89 45 00          	mov    %rax,0x0(%rbp)
  40258a:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  402591:	20 75 6e 
  402594:	48 89 45 08          	mov    %rax,0x8(%rbp)
  402598:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40259f:	74 6f 20 
  4025a2:	48 89 45 10          	mov    %rax,0x10(%rbp)
  4025a6:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  4025ad:	76 65 20 
  4025b0:	48 89 45 18          	mov    %rax,0x18(%rbp)
  4025b4:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  4025bb:	72 20 61 
  4025be:	48 89 45 20          	mov    %rax,0x20(%rbp)
  4025c2:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  4025c9:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  4025cf:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  4025d3:	89 df                	mov    %ebx,%edi
  4025d5:	e8 46 e6 ff ff       	callq  400c20 <close@plt>
  4025da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4025df:	e9 b1 00 00 00       	jmpq   402695 <init_driver+0x1d7>
  4025e4:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  4025eb:	00 
  4025ec:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  4025f3:	00 00 
  4025f5:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  4025fb:	48 63 50 14          	movslq 0x14(%rax),%rdx
  4025ff:	48 8b 40 18          	mov    0x18(%rax),%rax
  402603:	48 8b 30             	mov    (%rax),%rsi
  402606:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  40260b:	b9 0c 00 00 00       	mov    $0xc,%ecx
  402610:	e8 6b e6 ff ff       	callq  400c80 <__memmove_chk@plt>
  402615:	66 c7 44 24 02 00 50 	movw   $0x5000,0x2(%rsp)
  40261c:	ba 10 00 00 00       	mov    $0x10,%edx
  402621:	48 89 e6             	mov    %rsp,%rsi
  402624:	89 df                	mov    %ebx,%edi
  402626:	e8 e5 e6 ff ff       	callq  400d10 <connect@plt>
  40262b:	85 c0                	test   %eax,%eax
  40262d:	79 50                	jns    40267f <init_driver+0x1c1>
  40262f:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  402636:	3a 20 55 
  402639:	48 89 45 00          	mov    %rax,0x0(%rbp)
  40263d:	48 b8 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rax
  402644:	20 74 6f 
  402647:	48 89 45 08          	mov    %rax,0x8(%rbp)
  40264b:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  402652:	65 63 74 
  402655:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402659:	48 b8 20 74 6f 20 73 	movabs $0x76726573206f7420,%rax
  402660:	65 72 76 
  402663:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402667:	66 c7 45 20 65 72    	movw   $0x7265,0x20(%rbp)
  40266d:	c6 45 22 00          	movb   $0x0,0x22(%rbp)
  402671:	89 df                	mov    %ebx,%edi
  402673:	e8 a8 e5 ff ff       	callq  400c20 <close@plt>
  402678:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40267d:	eb 16                	jmp    402695 <init_driver+0x1d7>
  40267f:	89 df                	mov    %ebx,%edi
  402681:	e8 9a e5 ff ff       	callq  400c20 <close@plt>
  402686:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  40268c:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  402690:	b8 00 00 00 00       	mov    $0x0,%eax
  402695:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40269a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4026a1:	00 00 
  4026a3:	74 05                	je     4026aa <init_driver+0x1ec>
  4026a5:	e8 56 e5 ff ff       	callq  400c00 <__stack_chk_fail@plt>
  4026aa:	48 83 c4 28          	add    $0x28,%rsp
  4026ae:	5b                   	pop    %rbx
  4026af:	5d                   	pop    %rbp
  4026b0:	c3                   	retq   

00000000004026b1 <driver_post>:
  4026b1:	53                   	push   %rbx
  4026b2:	4c 89 cb             	mov    %r9,%rbx
  4026b5:	45 85 c0             	test   %r8d,%r8d
  4026b8:	74 27                	je     4026e1 <driver_post+0x30>
  4026ba:	48 89 ca             	mov    %rcx,%rdx
  4026bd:	be 2d 2e 40 00       	mov    $0x402e2d,%esi
  4026c2:	bf 01 00 00 00       	mov    $0x1,%edi
  4026c7:	b8 00 00 00 00       	mov    $0x0,%eax
  4026cc:	e8 ff e5 ff ff       	callq  400cd0 <__printf_chk@plt>
  4026d1:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  4026d6:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  4026da:	b8 00 00 00 00       	mov    $0x0,%eax
  4026df:	eb 3f                	jmp    402720 <driver_post+0x6f>
  4026e1:	48 85 ff             	test   %rdi,%rdi
  4026e4:	74 2c                	je     402712 <driver_post+0x61>
  4026e6:	80 3f 00             	cmpb   $0x0,(%rdi)
  4026e9:	74 27                	je     402712 <driver_post+0x61>
  4026eb:	48 83 ec 08          	sub    $0x8,%rsp
  4026ef:	41 51                	push   %r9
  4026f1:	49 89 c9             	mov    %rcx,%r9
  4026f4:	49 89 d0             	mov    %rdx,%r8
  4026f7:	48 89 f9             	mov    %rdi,%rcx
  4026fa:	48 89 f2             	mov    %rsi,%rdx
  4026fd:	be 50 00 00 00       	mov    $0x50,%esi
  402702:	bf 43 2d 40 00       	mov    $0x402d43,%edi
  402707:	e8 fe f5 ff ff       	callq  401d0a <submitr>
  40270c:	48 83 c4 10          	add    $0x10,%rsp
  402710:	eb 0e                	jmp    402720 <driver_post+0x6f>
  402712:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402717:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  40271b:	b8 00 00 00 00       	mov    $0x0,%eax
  402720:	5b                   	pop    %rbx
  402721:	c3                   	retq   
  402722:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402729:	00 00 00 
  40272c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402730 <__libc_csu_init>:
  402730:	41 57                	push   %r15
  402732:	41 56                	push   %r14
  402734:	41 89 ff             	mov    %edi,%r15d
  402737:	41 55                	push   %r13
  402739:	41 54                	push   %r12
  40273b:	4c 8d 25 be 16 20 00 	lea    0x2016be(%rip),%r12        # 603e00 <__frame_dummy_init_array_entry>
  402742:	55                   	push   %rbp
  402743:	48 8d 2d be 16 20 00 	lea    0x2016be(%rip),%rbp        # 603e08 <__init_array_end>
  40274a:	53                   	push   %rbx
  40274b:	49 89 f6             	mov    %rsi,%r14
  40274e:	49 89 d5             	mov    %rdx,%r13
  402751:	4c 29 e5             	sub    %r12,%rbp
  402754:	48 83 ec 08          	sub    $0x8,%rsp
  402758:	48 c1 fd 03          	sar    $0x3,%rbp
  40275c:	e8 0f e4 ff ff       	callq  400b70 <_init>
  402761:	48 85 ed             	test   %rbp,%rbp
  402764:	74 20                	je     402786 <__libc_csu_init+0x56>
  402766:	31 db                	xor    %ebx,%ebx
  402768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40276f:	00 
  402770:	4c 89 ea             	mov    %r13,%rdx
  402773:	4c 89 f6             	mov    %r14,%rsi
  402776:	44 89 ff             	mov    %r15d,%edi
  402779:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40277d:	48 83 c3 01          	add    $0x1,%rbx
  402781:	48 39 eb             	cmp    %rbp,%rbx
  402784:	75 ea                	jne    402770 <__libc_csu_init+0x40>
  402786:	48 83 c4 08          	add    $0x8,%rsp
  40278a:	5b                   	pop    %rbx
  40278b:	5d                   	pop    %rbp
  40278c:	41 5c                	pop    %r12
  40278e:	41 5d                	pop    %r13
  402790:	41 5e                	pop    %r14
  402792:	41 5f                	pop    %r15
  402794:	c3                   	retq   
  402795:	90                   	nop
  402796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40279d:	00 00 00 

00000000004027a0 <__libc_csu_fini>:
  4027a0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004027a4 <_fini>:
  4027a4:	48 83 ec 08          	sub    $0x8,%rsp
  4027a8:	48 83 c4 08          	add    $0x8,%rsp
  4027ac:	c3                   	retq   
