
main：     文件格式 elf64-x86-64


Disassembly of section .init:

00000000000005c8 <_init>:
 5c8:	48 83 ec 08          	sub    $0x8,%rsp
 5cc:	48 8b 05 15 0a 20 00 	mov    0x200a15(%rip),%rax        # 200fe8 <__gmon_start__>
 5d3:	48 85 c0             	test   %rax,%rax
 5d6:	74 02                	je     5da <_init+0x12>
 5d8:	ff d0                	callq  *%rax
 5da:	48 83 c4 08          	add    $0x8,%rsp
 5de:	c3                   	retq   

Disassembly of section .plt:

00000000000005e0 <.plt>:
 5e0:	ff 35 ca 09 20 00    	pushq  0x2009ca(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 5e6:	ff 25 cc 09 20 00    	jmpq   *0x2009cc(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 5ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005f0 <__stack_chk_fail@plt>:
 5f0:	ff 25 ca 09 20 00    	jmpq   *0x2009ca(%rip)        # 200fc0 <__stack_chk_fail@GLIBC_2.4>
 5f6:	68 00 00 00 00       	pushq  $0x0
 5fb:	e9 e0 ff ff ff       	jmpq   5e0 <.plt>

0000000000000600 <__printf_chk@plt>:
 600:	ff 25 c2 09 20 00    	jmpq   *0x2009c2(%rip)        # 200fc8 <__printf_chk@GLIBC_2.3.4>
 606:	68 01 00 00 00       	pushq  $0x1
 60b:	e9 d0 ff ff ff       	jmpq   5e0 <.plt>

0000000000000610 <__isoc99_scanf@plt>:
 610:	ff 25 ba 09 20 00    	jmpq   *0x2009ba(%rip)        # 200fd0 <__isoc99_scanf@GLIBC_2.7>
 616:	68 02 00 00 00       	pushq  $0x2
 61b:	e9 c0 ff ff ff       	jmpq   5e0 <.plt>

Disassembly of section .plt.got:

0000000000000620 <__cxa_finalize@plt>:
 620:	ff 25 d2 09 20 00    	jmpq   *0x2009d2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 626:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000630 <_start>:
 630:	31 ed                	xor    %ebp,%ebp
 632:	49 89 d1             	mov    %rdx,%r9
 635:	5e                   	pop    %rsi
 636:	48 89 e2             	mov    %rsp,%rdx
 639:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 63d:	50                   	push   %rax
 63e:	54                   	push   %rsp
 63f:	4c 8d 05 1a 02 00 00 	lea    0x21a(%rip),%r8        # 860 <__libc_csu_fini>
 646:	48 8d 0d a3 01 00 00 	lea    0x1a3(%rip),%rcx        # 7f0 <__libc_csu_init>
 64d:	48 8d 3d 37 01 00 00 	lea    0x137(%rip),%rdi        # 78b <main>
 654:	ff 15 86 09 20 00    	callq  *0x200986(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 65a:	f4                   	hlt    
 65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000660 <deregister_tm_clones>:
 660:	48 8d 3d a9 09 20 00 	lea    0x2009a9(%rip),%rdi        # 201010 <__TMC_END__>
 667:	55                   	push   %rbp
 668:	48 8d 05 a1 09 20 00 	lea    0x2009a1(%rip),%rax        # 201010 <__TMC_END__>
 66f:	48 39 f8             	cmp    %rdi,%rax
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 19                	je     690 <deregister_tm_clones+0x30>
 677:	48 8b 05 5a 09 20 00 	mov    0x20095a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 67e:	48 85 c0             	test   %rax,%rax
 681:	74 0d                	je     690 <deregister_tm_clones+0x30>
 683:	5d                   	pop    %rbp
 684:	ff e0                	jmpq   *%rax
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <register_tm_clones>:
 6a0:	48 8d 3d 69 09 20 00 	lea    0x200969(%rip),%rdi        # 201010 <__TMC_END__>
 6a7:	48 8d 35 62 09 20 00 	lea    0x200962(%rip),%rsi        # 201010 <__TMC_END__>
 6ae:	55                   	push   %rbp
 6af:	48 29 fe             	sub    %rdi,%rsi
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	48 c1 fe 03          	sar    $0x3,%rsi
 6b9:	48 89 f0             	mov    %rsi,%rax
 6bc:	48 c1 e8 3f          	shr    $0x3f,%rax
 6c0:	48 01 c6             	add    %rax,%rsi
 6c3:	48 d1 fe             	sar    %rsi
 6c6:	74 18                	je     6e0 <register_tm_clones+0x40>
 6c8:	48 8b 05 21 09 20 00 	mov    0x200921(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6cf:	48 85 c0             	test   %rax,%rax
 6d2:	74 0c                	je     6e0 <register_tm_clones+0x40>
 6d4:	5d                   	pop    %rbp
 6d5:	ff e0                	jmpq   *%rax
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 
 6e0:	5d                   	pop    %rbp
 6e1:	c3                   	retq   
 6e2:	0f 1f 40 00          	nopl   0x0(%rax)
 6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6ed:	00 00 00 

00000000000006f0 <__do_global_dtors_aux>:
 6f0:	80 3d 19 09 20 00 00 	cmpb   $0x0,0x200919(%rip)        # 201010 <__TMC_END__>
 6f7:	75 2f                	jne    728 <__do_global_dtors_aux+0x38>
 6f9:	48 83 3d f7 08 20 00 	cmpq   $0x0,0x2008f7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 700:	00 
 701:	55                   	push   %rbp
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 0c                	je     713 <__do_global_dtors_aux+0x23>
 707:	48 8b 3d fa 08 20 00 	mov    0x2008fa(%rip),%rdi        # 201008 <__dso_handle>
 70e:	e8 0d ff ff ff       	callq  620 <__cxa_finalize@plt>
 713:	e8 48 ff ff ff       	callq  660 <deregister_tm_clones>
 718:	c6 05 f1 08 20 00 01 	movb   $0x1,0x2008f1(%rip)        # 201010 <__TMC_END__>
 71f:	5d                   	pop    %rbp
 720:	c3                   	retq   
 721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 728:	f3 c3                	repz retq 
 72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000730 <frame_dummy>:
 730:	55                   	push   %rbp
 731:	48 89 e5             	mov    %rsp,%rbp
 734:	5d                   	pop    %rbp
 735:	e9 66 ff ff ff       	jmpq   6a0 <register_tm_clones>

000000000000073a <f>:
 73a:	53                   	push   %rbx
 73b:	48 83 ec 10          	sub    $0x10,%rsp
 73f:	48 89 fb             	mov    %rdi,%rbx
 742:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 749:	00 00 
 74b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 750:	31 c0                	xor    %eax,%eax
 752:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
 759:	00 
 75a:	48 89 e6             	mov    %rsp,%rsi
 75d:	48 8d 3d 10 01 00 00 	lea    0x110(%rip),%rdi        # 874 <_IO_stdin_used+0x4>
 764:	e8 a7 fe ff ff       	callq  610 <__isoc99_scanf@plt>
 769:	48 8b 04 24          	mov    (%rsp),%rax
 76d:	48 03 03             	add    (%rbx),%rax
 770:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 775:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
 77c:	00 00 
 77e:	75 06                	jne    786 <f+0x4c>
 780:	48 83 c4 10          	add    $0x10,%rsp
 784:	5b                   	pop    %rbx
 785:	c3                   	retq   
 786:	e8 65 fe ff ff       	callq  5f0 <__stack_chk_fail@plt>

000000000000078b <main>:
 78b:	48 83 ec 18          	sub    $0x18,%rsp
 78f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 796:	00 00 
 798:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 79d:	31 c0                	xor    %eax,%eax
 79f:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
 7a6:	00 
 7a7:	48 89 e7             	mov    %rsp,%rdi
 7aa:	e8 8b ff ff ff       	callq  73a <f>
 7af:	48 89 04 24          	mov    %rax,(%rsp)
 7b3:	48 89 c2             	mov    %rax,%rdx
 7b6:	48 8d 35 b7 00 00 00 	lea    0xb7(%rip),%rsi        # 874 <_IO_stdin_used+0x4>
 7bd:	bf 01 00 00 00       	mov    $0x1,%edi
 7c2:	b8 00 00 00 00       	mov    $0x0,%eax
 7c7:	e8 34 fe ff ff       	callq  600 <__printf_chk@plt>
 7cc:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
 7d1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 7d8:	00 00 
 7da:	75 0a                	jne    7e6 <main+0x5b>
 7dc:	b8 00 00 00 00       	mov    $0x0,%eax
 7e1:	48 83 c4 18          	add    $0x18,%rsp
 7e5:	c3                   	retq   
 7e6:	e8 05 fe ff ff       	callq  5f0 <__stack_chk_fail@plt>
 7eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000007f0 <__libc_csu_init>:
 7f0:	41 57                	push   %r15
 7f2:	41 56                	push   %r14
 7f4:	49 89 d7             	mov    %rdx,%r15
 7f7:	41 55                	push   %r13
 7f9:	41 54                	push   %r12
 7fb:	4c 8d 25 a6 05 20 00 	lea    0x2005a6(%rip),%r12        # 200da8 <__frame_dummy_init_array_entry>
 802:	55                   	push   %rbp
 803:	48 8d 2d a6 05 20 00 	lea    0x2005a6(%rip),%rbp        # 200db0 <__init_array_end>
 80a:	53                   	push   %rbx
 80b:	41 89 fd             	mov    %edi,%r13d
 80e:	49 89 f6             	mov    %rsi,%r14
 811:	4c 29 e5             	sub    %r12,%rbp
 814:	48 83 ec 08          	sub    $0x8,%rsp
 818:	48 c1 fd 03          	sar    $0x3,%rbp
 81c:	e8 a7 fd ff ff       	callq  5c8 <_init>
 821:	48 85 ed             	test   %rbp,%rbp
 824:	74 20                	je     846 <__libc_csu_init+0x56>
 826:	31 db                	xor    %ebx,%ebx
 828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 82f:	00 
 830:	4c 89 fa             	mov    %r15,%rdx
 833:	4c 89 f6             	mov    %r14,%rsi
 836:	44 89 ef             	mov    %r13d,%edi
 839:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 83d:	48 83 c3 01          	add    $0x1,%rbx
 841:	48 39 dd             	cmp    %rbx,%rbp
 844:	75 ea                	jne    830 <__libc_csu_init+0x40>
 846:	48 83 c4 08          	add    $0x8,%rsp
 84a:	5b                   	pop    %rbx
 84b:	5d                   	pop    %rbp
 84c:	41 5c                	pop    %r12
 84e:	41 5d                	pop    %r13
 850:	41 5e                	pop    %r14
 852:	41 5f                	pop    %r15
 854:	c3                   	retq   
 855:	90                   	nop
 856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 85d:	00 00 00 

0000000000000860 <__libc_csu_fini>:
 860:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000864 <_fini>:
 864:	48 83 ec 08          	sub    $0x8,%rsp
 868:	48 83 c4 08          	add    $0x8,%rsp
 86c:	c3                   	retq   
